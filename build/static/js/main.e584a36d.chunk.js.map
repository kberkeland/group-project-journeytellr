{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/storyReducer.js","redux/reducers/templateReducer.js","redux/reducers/notificationReducer.js","redux/reducers/chapterReducer.js","redux/reducers/contributorReducer.js","redux/reducers/storyDetailReducer.js","redux/reducers/searchResultsReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/templateSaga.js","redux/sagas/profileSaga.js","redux/sagas/contributorSaga.js","redux/sagas/imageSaga.js","redux/sagas/storySaga.js","redux/sagas/notificationSaga.js","redux/sagas/storyDetailSaga.js","redux/sagas/searchStoriesSaga.js","redux/sagas/chapterSaga.js","redux/sagas/likesSaga.js","redux/sagas/index.js","components/AboutPage/AboutPage.js","components/Home/ContributedListItem.js","components/Home/ContributedList.js","components/Home/TopStoryItem.js","components/Home/TopStoryList.js","components/Common/SubHeader.js","components/Home/HomePage.js","components/Notification/InviteList.js","components/Notification/Notification.js","components/Profile/ContributedStoryListItem.js","components/Profile/ContributedStoryList.js","components/Profile/ProfilePage.js","components/Search/SearchBar.js","components/Search/ResultListItem.js","components/Search/SearchResult.js","components/Search/SearchMain.js","components/ImageUpload/ImageUpload.js","components/Story/ExistingStory/EditButton.js","components/Story/ExistingStory/FinalizeStoryButton.js","components/Story/ExistingStory/ChapterView/ChapterView.js","components/Story/Contributor/ContributorForm.js","components/Story/Contributor/ContributorItem.js","components/Story/Contributor/ContributorList.js","components/Story/Contributor/ContributorPopup.js","components/Story/Chapter/AddChapter.js","components/Story/ExistingStory/SummaryChapterList.js","components/Story/ExistingStory/ExistingStorySummary.js","components/Story/ExistingStory/ExistingStoryMain.js","components/Story/CreateStory/ChooseTemplate.js","components/Story/CreateStory/CreateStorySteps.js","components/Story/CreateStory/CreateStoryMain.js","components/Story/CreateStory/CreateStoryDetail.js","components/Story/CreateStory/CreateStoryChapter.js","components/Story/CreateStory/CreateStoryContributor.js","components/Nav/NavigationLink.js","components/Nav/SideDrawer.js","components/Nav/NavButton.js","components/LoginPage/LoginPage.js","components/RegisterPage/ProfileInfo.js","components/RegisterPage/UserInfo.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Faker/FakeData.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","registrationState","first_name","last_name","email","password","confirm_email","confirm_password","profile_pic","userInfo","action","payload","registration","Object","objectSpread","photoObj","data","Location","initialNewStory","name","title","caption","placeholder_image","intro","initialImage","storyImage","contributedStoryReducer","topStoriesReducer","completeStoryReducer","searchStoryReducer","userStoryReducer","newStoryReducer","imageReducer","contributors","initialTemplateNewStory","initialTemplateNewChapter","templateReducer","templateNewStoryReducer","templateNewChapterReducer","invite","initialNewStoryChapter","chapterReducer","newStoryChapterReducer","filter","newState","array","map","item","index","id","updateChapterInStory","initialPending","employeeResults","pending","concat","toConsumableArray","summary","likes","contributor","chapter","searchResults","rootReducer","errors","user","story","template","notification","storyDetail","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","message","error","response","status","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","userSaga_marked","userSaga_marked2","storyTemplate","storyTemplateDetails","templateSaga","_action","templateSaga_marked","nextAction","chapterResponse","chapterAction","templateSaga_marked2","templateSaga_marked3","editProfile","profileSaga","profileSaga_marked","profileSaga_marked2","getEmployees","addContributor","contributorSaga","contributorSaga_marked","story_id","pendingContributor","contributorSaga_marked2","contributorSaga_marked3","addImageAWS","addImagePerson","updatePicture","imageSaga","awsResponse","then","catch","nextType","chapterId","storyId","imageSaga_marked","imageSaga_marked2","imageSaga_marked3","_context4","_marked4","getMyContributions","getTopStories","addAStory","clearNewStory","getContributors","storySaga","serverResponse","storySaga_marked","storySaga_marked2","success","storySaga_marked3","storyAction","contributorAction","imageAction","storySaga_marked4","_context5","_marked5","_context6","_marked6","getInvites","inviteResponse","notificationsSaga","notificationSaga_marked","_action$payload","invite_id","notificationSaga_marked2","takeEvery","notificationSaga_marked3","getIndividualStory","getChapterDetail","editChapter","editStory","getStoryContributors","getStoryLikes","completeStory","changeStoryImage","storyDetailSaga","storyDetailSaga_marked","storyDetailSaga_marked2","storyDetailSaga_marked3","storyDetailSaga_marked4","storyDetailSaga_marked5","storyDetailSaga_marked6","_context7","_marked7","dataToSend","_context8","image","_marked8","_context9","_marked9","getStoriesAuthor","getStoriesTitle","getStoriesDescription","searchStorySaga","searchStoriesSaga_marked","searchStoriesSaga_marked2","searchStoriesSaga_marked3","searchStoriesSaga_marked4","addExistingStoryChapter","changeChapterImage","chapterSaga","chapterSaga_marked","chapterSaga_marked2","chapterSaga_marked3","likeContributedStory","likeTopStory","likesSaga","likesSaga_marked","likesSaga_marked2","likesSaga_marked3","rootSaga","all","sagas_marked","Paragraph","Typography","AboutPage","react_default","createElement","className","row","col","span","avatar","shape","size","src","justify","align","card","Component","ContributedListItem","handleReadStory","event","_this","props","history","push","handleLike","dispatch","user_id","componentDidMount","bordered","style","width","cover","alt","this","header_photo","actions","es_button","icon","onClick","badge","count","backgroundColor","color","boxShadow","gutter","author","connect","reduxStore","ContributedList","handleStartStory","_this2","contributedStories","carousel","swipeToSlide","i","Home_ContributedListItem","key","TopStoryItem","TopStoryList","topStories","Home_TopStoryItem","Title","SubHeader","level","headerText","HomePage","open","description","duration","SubHeader_SubHeader","divider","Home_ContributedList","Home_TopStoryList","InviteList","buildListItems","list","Item","Meta","href","handleInvite","itemLayout","dataSource","renderItem","bind","Notification","Notification_InviteList","rs","antIcon","fontSize","spin","ContributedStoryListItem","handleDispatch","indicator","ContributedStoryList","Profile_ContributedStoryListItem","Text","TextArea","Input","ProfilePage","isHidden","bio","visible","file","showModal","setState","handleOk","e","submitFile","handleCancel","formData","FormData","append","appendPic","statePic","picURL","URL","createObjectURL","height","handleFileUpload","target","files","handleChange","propertyName","defineProperty","value","testThings","editedName","xs","renderStaticName","renderEditName","moment","date_created","format","ProfilePage_Title","Profile_ContributedStoryList","modal","onOk","onCancel","accept","onChange","input","placeholder","onEditBtnClick","submitEditedName","SearchBar","dropdown","sendSearch","toLowerCase","Search","Option","Select","selectBefore","es_select","defaultValue","addonBefore","onSearch","ResultListItem","photoFlipped","handleClick","handleDescription","substring","flipPhoto","_this$props$item","full_name","extra","borderStyle","typography","textAlign","paddingTop","objectFit","textDecoration","Link","to","marginBottom","withRouter","SearchResult","pagination","page","pageSize","hideOnSinglePage","marginTop","Search_ResultListItem","SearchMain","components_Search_SearchBar","Search_SearchResult","ImageUpload","confirmLoading","setTimeout","photoDetails","typeOfPhoto","buttonClass","_this$props$photoDeta","buttonName","_this$state","editMode","thumbnailSrc","top","okText","EditButton","modalVisible","editedValue","handleModalBtn","handleEdit","handleSubmit","_this$props","colName","updatedValue","_this$props2","valueToEdit","minHeight","confirm","Modal","FinalizeStoryButton","handlePostStory","content","okType","okButtonProps","cancelText","author_id","completed","margin","ChapterView","turnPage","handleReturn","match","params","contributorSum","contributorDescription","currChapter","page_header","order","subTitle","author_name","ExistingStory_EditButton","display","chapter_photo","text","components_ImageUpload_ImageUpload","defaultCurrent","total","Number","ExistingStory_FinalizeStoryButton","ChapterViewWithRouter","AutoComplete","ContributorForm","person","alert","handleSearch","repeat","pendingContributors","c","person_id","employeeObj","ContributorForm_Option","es_alert","showIcon","auto_complete","addonAfter","ContributorItem","itemClick","ContributorList","storyContributors","Contributor_ContributorItem","ContributorPopup","loading","fullPayload","footer","ContributorBtnName","Contributor_ContributorForm","Contributor_ContributorList","AddChapter","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openChapterModal","onInputChange","_event$target","addChapter","newOrder","chapterArray","disabled","baseState","cancelEntry","keyboard","allowClear","SummaryChapterList","readChapter","SummaryChapterList_Title","Chapter_AddChapter","textToShow","imgToShow","url","indexOf","SummaryChapterListWithRouter","Card","ExistingStorySummary","_summary$","Contributor_ContributorPopup","ExistingStorySummary_Title","ExistingStorySummary_Paragraph","ExistingStory_SummaryChapterList","ExistingStoryMain","_this$props$storyDeta","isNaN","ExistingStory_ExistingStorySummary","ExistingStory_ChapterView_ChapterView","_props$storyDetail","authorCheck","contributorObj","ChooseTemplate","es_form","label","CreateStorySteps","steps","current","Step","CreateStoryMain","nextPage","preventDefault","CreateStory_CreateStorySteps","layout","onSubmit","CreateStory_ChooseTemplate","htmlType","CreateStoryDetail","previousButton","hasErrors","fieldsError","keys","some","field","createStory","form","validateFieldsAndScroll","values","storyData","is_template","resetFields","_this$props$form","getFieldDecorator","getFieldsError","initialValue","rules","required","WrappedCreateStoryDetail","Form","create","CreateStoryChapter","removeChapter","k","getFieldValue","setFieldsValue","nextKeys","ch","tempArray","isTemplate","formItems","validateTrigger","whitespace","WrappedCreateStoryChapter","CreateStoryContributor","completeDataToSend","WrappedCreateStoryContributor","NavigationLink","_this$props$routeObj","routeObj","route","iconType","onClickFxn","handleSideBar","textStyle","NavLink","exact","activeClassName","notificationCount","NavigationLink_Text","SideDrawer","buildLinks","Nav_NavigationLink","profilePic","drawer","placement","closable","onClose","SideDrawer_Title","store","library","add","faBars","NavButton","bool","index_es","toString","Nav_SideDrawer","LoginPage","login","handleInputChangeFor","emitEmpty","userNameInput","focus","showLoginErrorMessage","suffix","htmlFor","prefix","float","ProfileInfo","advanceRegistration","handleRegisterNavButton","dummy","opacity","UserInfo","_this$props$registrat","RegisterPage","showRegisterErrorMessage","RegisterPage_ProfileInfo","RegisterPage_UserInfo","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","require","addFakePeople","addFakeStories","addFakeChapters","addFakeLikes","App","HashRouter","Nav_NavButton","theme","twoToneColor","Switch","Redirect","from","path","components_ProtectedRoute_ProtectedRoute","FakeData","render","back_top","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e584a36d.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","import { combineReducers } from 'redux';\n\nconst userInfo = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst registrationState = {\n  first_name: '',\n  last_name: '',\n  email: '',\n  password: '',\n  confirm_email: '',\n  confirm_password: '',\n  profile_pic: './images/headshot-placeholder.jpg', \n}\nconst registration = (state = registrationState, action) => {\n  switch (action.type) {\n    case 'UPDATE_REGISTRATION':\n      return { ...state, ...action.payload };\n    case 'ADD_IMAGE_REGISTER':\n      const photoObj = { profile_pic: action.payload.data.Location}\n      return {...state, ...photoObj}\n    case 'CLEAR_REGISTRATION':\n      return registrationState;\n    default:\n      return state;\n  }\n\n}\n\n// user will be on the redux state at:\n// state.user\nexport default combineReducers({\n  userInfo,\n  registration,\n});\n","import { combineReducers } from 'redux';\n\n//this reducer will return all the \n//stories a user is/has contributed to.\n//To be used on the home page\nconst contributedStoryReducer = (state = [], action) => {\n    if(action.type === 'SET_STORY_CONTRIBUTIONS') {\n        return action.payload;\n    }\n    return state;\n}\n\n//This reducer will return the top 10 stories at the company.\n//To be used on the home page.\nconst topStoriesReducer = (state = [], action) => {\n    if(action.type === 'SET_TOP_STORIES') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst completeStoryReducer = (state = [], action) => {\n    if(action.type === 'SET_COMPLETE_STORY') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst searchStoryReducer = (state = [], action) => {\n    if(action.type === 'SET_SEARCH_STORY') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst userStoryReducer = (state = [], action) => {\n    if(action.type === 'SET_USER_STORY') {\n        return action.payload;\n    }\n    return state;\n}\n\n// initial value for newStoryReducer used to clear the reducer\nconst initialNewStory = {name: '', title: '', caption: '', placeholder_image: '', intro: ''};\nconst newStoryReducer = (state = initialNewStory, action) => {\n    if(action.type === 'SET_NEW_STORY') {\n        return action.payload;\n    } else if(action.type === 'RESET_NEW_STORY') {\n        return initialNewStory;\n    }\n    return state;\n}\n\n// initial value for newStoryReducer used to clear the reducer\nconst initialImage = {storyImage: \"/images/placeholder.png\"};\nconst imageReducer = (state = initialImage, action) => {\n    if (action.type === 'ADD_IMAGE_STORY') {\n        return {storyImage: action.payload.data.Location};\n    } else if(action.type === 'RESET_IMAGE_STORY') {\n        return initialImage;\n    }\n    return state;\n}\n\nconst contributors = (state = [], action) => {\n    // console.log(action);\n    if (action.type === 'SET_CONTRIBUTORS') {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    contributedStoryReducer, // used on the home page\n    topStoriesReducer, //used the home page\n    completeStoryReducer, // used for the main story view page\n    searchStoryReducer, // for use with the search page\n    userStoryReducer, // for an user profile story page\n    newStoryReducer, // called when creating a new story\n    imageReducer, //holds AWS image location\n    contributors //this returns the names of all contributors to a story (for home page)\n});","import { combineReducers } from 'redux';\n\nconst templateReducer = ( state = [], action ) => {\n    // console.log(`in templateReducer: ${action.type}`);\n    if(action.type === 'SET_TEMPLATE') {\n        return action.payload;\n    } else if(action.type === 'SET_TEMPLATE_STORY_DROPDOWN') {\n        return action.payload;\n    }\n    return state;\n}\n\n// initial value for newStoryReducer used to clear the reducer\nconst initialTemplateNewStory = {name: '', title: '', caption: '', placeholder_image: '', intro: ''};\nconst templateNewStoryReducer = (state = initialTemplateNewStory, action) => {\n    if(action.type === 'SET_TEMPLATE_NEW_STORY') {\n        return action.payload;\n    } else if(action.type === 'SET_TEMPLATE_NEW_CREATE') {\n        return {name: 'initial'};\n    } else if(action.type === 'RESET_TEMPLATE_NEW_STORY') {\n        return initialTemplateNewStory;\n    }\n    return state;\n}\n\n// initial value for initialTemplateChapter used to clear the reducer\nconst initialTemplateNewChapter = [];\nconst templateNewChapterReducer = (state = initialTemplateNewChapter, action) => {\n    if(action.type === 'SET_TEMPLATE_NEW_CHAPTER') {\n        return action.payload;\n    } else if(action.type === 'RESET_TEMPLATE_NEW_CHAPTER') {\n        return initialTemplateNewChapter;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    templateReducer, // used to set the dropdown\n    templateNewStoryReducer, // sets story details from a template\n    templateNewChapterReducer, // sets chapter details from a template\n});","import { combineReducers } from 'redux';\n\nconst invite = (state = [], action) => {\n    switch (action.type) {\n        case ('SET_INVITES'):\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    invite,\n});","import { combineReducers } from 'redux';\n\nconst chapterReducer = (state = {}, action) => {\n    if(action.type === 'SET_CHAPTER') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst initialNewStoryChapter = [];\nconst newStoryChapterReducer = (state = initialNewStoryChapter, action) => {\n    if(action.type === 'SET_NEW_STORY_CHAPTER') {\n        return action.payload;\n    } else if(action.type === 'REMOVE_NEW_STORY_CHAPTER') {\n        let nextState = state.filter(newState => newState !== action.payload);\n        return nextState;\n    } else if(action.type === 'RESET_NEW_STORY_CHAPTER') {\n        return initialNewStoryChapter;\n    } else if(action.type === 'UPDATE_NEW_STORY_CHAPTER') {\n        let updatedChapter = updateChapterInStory(state, action.payload);\n        return updatedChapter;\n    }\n    return state;\n}\n\n// function will only update a specific chapter in the reducer\nfunction updateChapterInStory(array, action) {\n    return array.map((item, index) => {\n        if (index !== action.id) {\n            // This isn't the item we care about - keep it as-is\n            return item\n        }\n        // Otherwise, this is the one we want - return an updated value\n        return {...item,...action.item}\n    });\n  }\n\nexport default combineReducers({\n    chapterReducer, // set the story chapters for viewing\n    newStoryChapterReducer, // saves chapters added when creating a new story\n});","import { combineReducers } from 'redux';\n\nconst employeeResults = (state = [], action) => {\n    switch(action.type){\n        case('SET_EMPLOYEE_RESULTS'):\n            return action.payload;\n        case('CLEAR_EMPLOYEE_RESULTS'):\n            return [];\n        default:\n            return state;\n    }\n}\n\n// initial value for pending contributor\nconst initialPending = []\nconst pending = (state = initialPending, action) => {\n    switch (action.type) {\n        case ('ADD_PENDING_CONTRIBUTORS'):\n            return [...state,  action.payload];\n        case ('REMOVE_PENDING_CONTRIBUTOR'):\n            return state.filter( item => item !== action.payload );\n        case ('RESET_PENDING_CONTRIBUTOR'):\n            return initialPending;\n        default:\n            return state;\n    }\n}\n\n\n\nexport default combineReducers({\n    employeeResults,\n    pending,\n});","import { combineReducers } from 'redux';\n\nconst contributedStoryReducer = (state = [], action) => {\n    if (action.type === 'SET_STORY_CONTRIBUTIONS') {\n        return action.payload;\n    }\n    return state;\n}\n\n//this will return a single story detail on the\n//existing-story/:id page\nconst summary = (state = [], action) => {\n    if (action.type === 'SET_STORY_DETAIL') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst likes = (state = [], action) => {\n    if (action.type === 'SET_STORY_DETAIL_LIKES') {\n        return action.payload;\n    }\n    return state;\n}\n\n//this will return all of the contributors to a particular story\nconst contributor = (state = [], action) => {\n    if (action.type === 'SET_STORY_DETAIL_CONTRIBUTOR') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst chapter = (state = [], action) => {\n    if (action.type === 'SET_STORY_DETAIL_CHAPTER') {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    contributedStoryReducer, \n    summary,\n    likes,\n    contributor,\n    chapter,\n});","const searchResults = (state = [], action) => {\n    switch (action.type) {\n        case ('SET_STORY_SEARCH_RESULTS'):\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default searchResults;\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport story from './storyReducer.js';\nimport template from './templateReducer.js';\nimport notification from './notificationReducer.js';\nimport chapter from './chapterReducer.js';\nimport contributor from './contributorReducer.js';\nimport storyDetail from './storyDetailReducer';\nimport searchResults from './searchResultsReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  story, // contains reducers for all the story pages\n  template, // templates for assistance in creating a story\n  notification, // list of user notifications\n  chapter, // loads chapters for a story\n  contributor, // list of app users to be contributors\n  storyDetail,\n  searchResults, //results back from server after search all stories\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    message.error('Login error');\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n    message.error('Logout error');\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // console.log('in registeruser');\n    \n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n    yield put({type: 'CLEAR_REGISTRATION'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      message.error('Error in registration');\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n    yield put({type: \"GET_INVITES\"});\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* storyTemplate(action) {\n  try {\n    //gets template story id and name for dropdown\n    const response = yield axios.get('/template');\n    const action = {type: 'SET_TEMPLATE_STORY_DROPDOWN', payload: response.data};\n    yield put(action);\n  } catch (error) {\n    console.log('Error with storyTemplate:', error);\n    message.error('There was a problem when setting the templates');\n  }\n}\n\n// get the story and chapter details from a template then set the reducers\nfunction* storyTemplateDetails(action) {\n  try {\n      // get template story details \n      const response = yield axios.get(`/template/story/${action.payload}`);\n      // set the template story\n      const nextAction = { type: 'SET_TEMPLATE_NEW_STORY', payload: response.data };\n      yield put(nextAction);\n      // get chapter details for a story\n      const chapterResponse = yield axios.get(`/template/chapter/${action.payload}`);\n      // set the chapter details\n      const chapterAction = { type: 'SET_TEMPLATE_NEW_CHAPTER', payload: chapterResponse.data };\n      yield put(chapterAction);\n  } catch (error) {\n      console.log('Error with storyTemplateDetails:', error);\n      message.error('There was a problem using the story template');\n  }\n}\n\nfunction* templateSaga() {\n  yield takeLatest('GET_TEMPLATE_STORY', storyTemplate);\n  yield takeLatest('GET_TEMPLATE_DETAILS', storyTemplateDetails);\n}\n\nexport default templateSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\n// function* getStats(action) {\n//     try {\n//         //gets story and contribution stats by counting tables\n//         yield console.log('in getStats with action:', action)\n//     } catch (error) {\n//         console.log('Error with getStats:', error);\n//         message.error('Problem counting stats');\n//     }\n// }\n\nfunction* editProfile(action) {\n    try {\n        yield axios.put(`/api/user/update-profile`, action.payload);\n        yield put({ type: \"FETCH_USER\", });\n    } catch (error) {\n        console.log('Error with editProfile:', error);\n        message.error('Error editing the profile');\n    }\n}\n\nfunction* profileSaga() {\n    // yield takeLatest('GET_TEMPLATE_STORY', getStats);\n    yield takeLatest('EDIT_PROFILE', editProfile);\n}\n\nexport default profileSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* getEmployees(action) {\n    try {\n        //autopopulates search results for adding contributors\n        const response = yield axios.get(`/invite/${action.payload}`);\n        yield put({type: 'SET_EMPLOYEE_RESULTS', payload: response.data})\n    } catch (error) {\n        console.log('Error with getEmployees saga', error);\n        message.error('Error getting contributors for search');\n    }\n}\n\n// function* getContributor(action) {\n//     try {\n//         //gets contributors for a given story\n//         yield console.log('in getContributor saga with:', action)\n//     } catch (error) {\n//         console.log('Error with storyTemplateDetails:', error);\n//         message.error('Error getting story contributors');\n//     }\n// }\n\n// function* deleteContributor(action) {\n//     try {\n//         //delete contributor from story\n//         yield console.log('in deleteContributor saga with:', action)\n//     } catch (error) {\n//         console.log('Error with storyTemplateDetails:', error);\n//         message.error('Error removing the contributor');\n//     }\n// }\n\nfunction* addContributor(action) {\n    try {\n        //add contributor to story\n        // yield console.log('in addContributor saga with:', action)\n        yield axios.post(`/invite/contributor/${action.payload.story_id}`, action.payload.pendingContributor )\n    } catch (error) {\n        console.log('Error with storyTemplateDetails:', error);\n        message.error('Error adding a contributor');\n    }\n}\n\n\n\nfunction* contributorSaga() {\n    yield takeLatest('GET_EMPLOYEES', getEmployees);\n    // yield takeLatest('GET_CONTRIBUTOR', getContributor);\n    // yield takeLatest('DELETE_CONTRIBUTOR', deleteContributor);\n    yield takeLatest('ADD_CONTRIBUTOR', addContributor);\n}\n\nexport default contributorSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* addImageAWS(action) {\n    // console.log('in addImage AWS', action);\n    let awsResponse;\n    try {\n            yield axios.post(`/awsS3`, action.payload, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n            .then(response => {\n                awsResponse = response; \n                // console.log(awsResponse);\n\n            }).catch(error => {\n                console.log(error);\n            });\n        } catch (error) {\n            console.log('Error with addImageAWS:', error);\n            message.error('Error sending the image to AWS');\n        }\n    let nextAction = {\n        type: action.nextType,\n        payload: awsResponse,\n        chapterId: action.chapterId,\n        storyId: action.storyId,\n    }\n    // console.log(`addImageAWS nextaction`, nextAction);\n    \n    yield put(nextAction);\n}\n\nfunction* addImagePerson(action) {\n\n    try {\n        yield axios.put(`/api/user/${action.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n    } catch (error) {\n        console.log('Error with addImage:', error);\n        message.error('Error adding a user profile image');\n    }\n\n\n}\n\nfunction* updatePicture(action) {\n\n    try {\n        yield axios.put(`/api/user/${action.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n    } catch (error) {\n        console.log('Error with addImage:', error);\n        message.error('Error updating user profile image');\n    }\n\n\n}\n\nfunction* imageSaga() {\n    yield takeLatest('ADD_IMAGE_AWS', addImageAWS);\n    yield takeLatest('ADD_IMAGE_PERSON', addImagePerson);\n    yield takeLatest('UPDATE_PICTURE', updatePicture);\n\n\n}\n\nexport default imageSaga;\n\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* getMyContributions(action) {\n    try {\n        const serverResponse = yield axios.get('story/story-contributions');\n\n        yield put({ type: 'SET_STORY_CONTRIBUTIONS', payload: serverResponse.data });\n\n    } catch (error) {\n        console.log(`Error in getMyContributions: ${error}`);\n        message.error('There was a problem when setting story contributions');\n    }\n}\n\nfunction* getTopStories(action) {\n    try {\n        // console.log('in getTopStories' );\n        const serverResponse = yield axios.get('story/recent');\n\n        yield put({ type: 'SET_TOP_STORIES', payload: serverResponse.data });\n\n    } catch (error) {\n        console.log(`Error in getStories: ${error}`);\n        message.error('There was a problem getting your top stories');\n    }\n}\n\n// function* storyTemplate(action) {\n//     try {\n//         yield console.log('in storyTemplate saga:')\n//     } catch (error) {\n//         console.log('Error with storyTemplate:', error);\n//         message.error('There was a problem with the template');\n//     }\n// }\n\n// send a new story to the server\nfunction* addAStory(action) {\n    try {\n        // POST a new story and get back the story id from the server\n        const response = yield axios.post('/story', action.payload.story);\n\n        // only send chapter data if it exists\n        if(action.payload.chapter.length !== 0) {\n            // tell the chapter route that the story is new so order is assigned\n            const newStory = true;\n            // send a POST request for all chapter data associated with the new story\n            yield axios.post(`/chapter/${response.data}/${newStory}`, action.payload.chapter);\n        } // end if\n\n        // only send contributor data if it exists\n        if(action.payload.contributor.length !== 0) {\n            // add all contributors associated with a story to the server\n            yield axios.post(`/invite/contributor/${response.data}`, action.payload.contributor);\n        } // end if\n        \n        // clear the new story reducers\n        message.success('You successfully created a story!');\n        const nextAction = { type: 'CLEAR_NEW_STORY' };\n        yield put(nextAction);\n    } catch (error) {\n        // error message and alert when trying to add a story fails\n        console.log(`Add story failed: ${error}`);\n        message.error('There was a problem when creating your story');\n    }\n}\n\n// reset story, image, chapter and contributor to initial values\nfunction* clearNewStory() {\n    try {\n        const storyAction = { type: 'RESET_NEW_STORY' };\n        yield put(storyAction);\n        const chapterAction = { type: 'RESET_NEW_STORY_CHAPTER' };\n        yield put(chapterAction);\n        const contributorAction = { type: 'RESET_PENDING_CONTRIBUTOR' };\n        yield put(contributorAction);\n        const imageAction = { type: 'RESET_IMAGE_STORY' };\n        yield put(imageAction);\n    } catch (error) {\n        // error message when clearing new story inputs\n        console.log(`Error in clearNewStory saga: ${error}`);\n        message.error('Error with clearing stories');\n    }\n}\n\nfunction* getContributors(action) {\n    try {\n        // console.log(action.payload);\n        const serverResponse = yield axios.get(`story/contributors/${action.payload}`);\n        yield put({type: 'SET_CONTRIBUTORS', payload: serverResponse.data});\n\n    } catch(e) {\n        console.log(`Error in getContributors saga: ${e}`);\n        message.error('Error getting contributors');\n    }\n}\n\n\nfunction* storySaga() {\n    yield takeLatest('GET_MY_CONTRIBUTIONS', getMyContributions);\n    yield takeLatest('GET_TOP_STORIES', getTopStories);\n    // yield takeLatest('GET_TEMPLATE_STORY', storyTemplate);\n    yield takeLatest('POST_NEW_STORY', addAStory);\n    yield takeLatest('CLEAR_NEW_STORY', clearNewStory);\n    yield takeLatest('GET_CONTRIBUTORS', getContributors);\n}\n\nexport default storySaga;","import { put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* getInvites(action) {\n    try {\n        const response = yield axios.get(`/invite/contributor`);\n        yield put({ type: 'SET_INVITES', payload: response.data })\n    } catch (error) {\n        console.log('Error with getInvites saga', error);\n        message.error('Problem with getting invites');\n    }\n}\n\nfunction* inviteResponse(action) {\n    try {\n        const {invite_id, status } = action.payload;\n        yield axios.put(`/invite/contributor/${invite_id}/${status}`);\n        yield put({type: 'GET_INVITES' });\n    } catch(e){\n        console.log('Error in inviteResponse saga', e);\n        message.error('Problem with invite response');\n    }\n}\n\nfunction* notificationsSaga() {\n    yield takeLatest('GET_INVITES', getInvites);\n    yield takeEvery('SEND_INVITE_RESPONSE', inviteResponse);\n}\n\nexport default notificationsSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* getIndividualStory(action) {\n    try {\n        // console.log('in getIndividualStory saga, action.payload: ', action.payload);\n        const serverResponse = yield axios.get(`story/detail/summary/${action.payload}`);\n        yield put({ type: 'SET_STORY_DETAIL', payload: serverResponse.data });\n    } catch (error) {\n        console.log(`Error in getting individual story: ${error}`);\n        message.error('Error loading a story');\n    }\n}\n\n//chapers\nfunction* getChapterDetail(action) {\n    try {\n        const response = yield axios.get(`story/detail/chapter/${action.payload}`);\n        yield put({ type: 'SET_STORY_DETAIL_CHAPTER', payload: response.data });\n    } catch (error) {\n        console.log(`Error in getChapterDetail saga:`, error);\n        message.error('Error loading the chapter detail');\n    }\n}\n\nfunction* editChapter(action) {\n    try {\n        const response = yield axios.put(`/chapter`, action.payload);\n        yield put({ type: 'GET_STORY_CHAPTER_DETAIL', payload: response.data[0].story_id });\n    }catch(e){\n        console.log('Error in editChapter saga:', e);\n        message.error('Error in chapter edit');\n    }\n}\n\nfunction* editStory(action) {\n    try {\n        yield axios.put('/story', action.payload);\n        yield put({ type: 'GET_INDIVIDUAL_STORY', payload: action.payload.id })\n    } catch (e) {\n        console.log('Error in editStory saga:', e);\n        message.error('Error in story edit');\n    }\n}\n\n//contributors\nfunction* getStoryContributors(action) {\n    try {\n        // console.log('getStoryContributors action: ', action);\n        const serverResponse = yield axios.get(`/story/detail/contributor/${action.payload}`);\n\n        yield put({ type: 'SET_STORY_DETAIL_CONTRIBUTOR', payload: serverResponse.data });\n    } catch (e) {\n        console.log(`Error getting story contributors: ${e}`);\n        message.error('Error getting the story contributors');\n    }\n}\n\n//likes for individual stories\nfunction* getStoryLikes(action) {\n    try {\n\n        const serverResponse = yield axios.get(`/story/detail/likes/${action.payload}`, action.payload);\n        yield put({ type: 'SET_STORY_DETAIL_LIKES', payload: serverResponse.data });\n        \n    } catch (e) {\n        console.log(`Error getting story likes: ${e}`);\n        message.error('Error getting story likes');\n    }\n}\n\n//completes story making it uneditable\nfunction* completeStory(action) {\n    try {\n        const storyId = action.payload;\n        yield axios.put(`/story/complete/${storyId}`);\n        yield put({ type: 'GET_INDIVIDUAL_STORY', payload: storyId })\n    } catch (e) {\n        console.log('Error finalizing story:', e)\n    }\n}\n\n// change the story image in edit mode\nfunction* changeStoryImage(action) {\n    try {\n        // package the image data\n        let dataToSend = { image: action.payload.data.Location };\n        // replace the old picture with the new picture\n        yield axios.put(`/story/image/${action.storyId}`, dataToSend);\n        // refresh the story with the added photo\n        yield put({type: 'GET_INDIVIDUAL_STORY', payload: action.storyId});\n    } catch(error) {\n        // error message when editing the story image\n        console.log(`Error in changeStoryImage: ${error}`);\n        message.error('Error when updating story image');\n    }\n}\n\nfunction* storyDetailSaga() {\n    yield takeLatest('GET_INDIVIDUAL_STORY', getIndividualStory);\n    yield takeLatest('GET_STORY_CHAPTER_DETAIL', getChapterDetail);\n    yield takeLatest('GET_STORY_CONTRIBUTORS', getStoryContributors);\n    yield takeLatest('EDIT_CHAPTER', editChapter);\n    yield takeLatest('EDIT_STORY', editStory);\n    yield takeLatest('GET_STORY_LIKES', getStoryLikes);\n    yield takeLatest('COMPLETE_STORY', completeStory);\n    yield takeLatest('ADD_IMAGE_EDIT_STORY_IMAGE', changeStoryImage);\n}\n\nexport default storyDetailSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\n// get stories searching by author\nfunction* getStoriesAuthor(action) {\n    try {\n        // console.log('in gSA');\n        // call to the database for getting stories\n        const serverResponse = yield axios.get(`/search-story/author/${action.payload}`);\n        yield put({ type: 'SET_STORY_SEARCH_RESULTS', payload: serverResponse.data });\n    } catch (error) {\n        // error message when trying to add a story\n        console.log(`getStoriesAuthor failed: ${error}`);\n        message.error('Error serching by author');\n    }\n}\nfunction* getStoriesTitle(action) {\n    try {\n        // console.log('in gST');\n        \n        // call to the database for getting stories\n        const serverResponse = yield axios.get(`/search-story/title/${action.payload}`);\n        yield put({ type: 'SET_STORY_SEARCH_RESULTS', payload: serverResponse.data });\n    } catch (error) {\n        // error message when trying to add a story\n        console.log(`getStoriesAuthor failed: ${error}`);\n        message.error('Error serching by title');\n    }\n}\nfunction* getStoriesDescription(action) {\n    try {\n        // console.log('in gSD');\n        // call to the database for getting stories\n        const serverResponse = yield axios.get(`/search-story/description/${action.payload}`);\n        yield put({ type: 'SET_STORY_SEARCH_RESULTS', payload: serverResponse.data });\n    } catch (error) {\n        // error message when trying to add a story\n        console.log(`getStoriesAuthor failed: ${error}`);\n        message.error('Error serching by description');\n    }\n}\n\nfunction* searchStorySaga() {\n    yield takeLatest('GET_SEARCH_STORIES_AUTHOR', getStoriesAuthor);\n    yield takeLatest('GET_SEARCH_STORIES_TITLE', getStoriesTitle);\n    yield takeLatest('GET_SEARCH_STORIES_DESCRIPTION', getStoriesDescription);\n}\n\nexport default searchStorySaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* addExistingStoryChapter(action) {\n    try {\n        // tell the chapter route that the story exists so order is not assigned\n        const newStory = false;\n        // call to the chapter route and POST the added chapter\n        yield axios.post(`chapter/${action.payload.storyId}/${newStory}`, action.payload.chapter);\n        // refresh the story chapter detail with the added chapter\n        yield put({type: 'GET_STORY_CHAPTER_DETAIL', payload: action.payload.storyId});\n    } catch(error) {\n        // console log and error message for addExistingStoryChapter\n        console.log(`Error in addExistingStoryChapter: ${error}`);\n        message.error('Error updating the chapter');\n    }\n}\n\nfunction* changeChapterImage(action) {\n    try {\n        // package the image data\n        let dataToSend = { image: action.payload.data.Location };\n        // replace the old picture with the new picture\n        const response = yield axios.put(`/chapter/image/${action.chapterId}`, dataToSend);\n        // refresh the chapter detail with the added photo\n        yield put({type: 'GET_STORY_CHAPTER_DETAIL', payload: response.data});\n    } catch(error) {\n        // error message when editing the chapter image\n        console.log(`Error in changeChapterImage: ${error}`);\n        message.error('Error when updating chapter image');\n    }\n}\n\nfunction* chapterSaga() {\n    yield takeLatest('ADD_EXISTING_STORY_CHAPTER', addExistingStoryChapter);\n    yield takeLatest('ADD_IMAGE_CHAPTER', changeChapterImage);\n}\n\nexport default chapterSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* likeContributedStory(action) {\n    try {\n        yield axios.post('/like', action.payload);\n        yield put({ type: 'GET_MY_CONTRIBUTIONS'});\n    } catch(error) {\n        console.log(`Error in likeContributedStory saga: ${error}`);\n        message.error('Error getting likes for my contributed stories');\n    }\n}\n\nfunction* likeTopStory(action) {\n    try {\n        yield axios.post('/like', action.payload);\n        yield put({ type: 'GET_TOP_STORIES'});\n    } catch(error) {\n        console.log(`Error in likeTopStory saga: ${error}`);\n        message.error('Error liking the top stories');\n    }\n}\n\nfunction* likesSaga() {\n    yield takeLatest('LIKE_CONTRIBUTED_STORY', likeContributedStory);\n    yield takeLatest('LIKE_TOP_STORY', likeTopStory);\n}\n\nexport default likesSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport templateSaga from './templateSaga';\nimport profileSaga from './profileSaga';\nimport contributorSaga from './contributorSaga';\nimport imageSaga from './imageSaga';\nimport storySaga from './storySaga';\nimport notificationsSaga from './notificationSaga';\nimport storyDetailSaga from './storyDetailSaga';\nimport searchStorySaga from './searchStoriesSaga';\nimport chapterSaga from './chapterSaga';\nimport likesSaga from './likesSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    likesSaga(),\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    templateSaga(),\n    profileSaga(),\n    contributorSaga(),\n    imageSaga(),\n    storySaga(),\n    notificationsSaga(),\n    storyDetailSaga(),\n    searchStorySaga(),\n    chapterSaga(),\n  ]);\n}\n","import React, { Component } from 'react';\nimport { Avatar } from 'antd';\nimport { Row, Col } from 'antd';\nimport { Card } from 'antd';\nimport { Typography } from 'antd';\nimport './AboutPage.css';\n\n\nconst { Paragraph } = Typography;\n\nclass AboutPage extends Component {\n\n\n  render() {\n\n    return (\n      <div className=\"about\">\n        <Row>\n          <Col span={8}></Col>\n          <Col span={8}>\n            <Avatar shape=\"square\" size={128} src='/images/kevinslogos/JourneyTellr-color.png' id=\"app-photo\" />\n          </Col>\n          <Col span={8}></Col>\n        </Row>\n        <Row type=\"flex\" justify=\"space-around\" align=\"bottom\">\n          <Col span={12} >\n            <Card className=\"paragraph\">\n              <Paragraph>\n                JourneyTellr is a social media app for enterprise-level\n                organizations to use internally with their employees.\n              </Paragraph>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n\n}\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport './CardDesigns.css';\nimport { connect } from 'react-redux';\n\nimport { Card, Button, Row, Col, Badge } from 'antd';\n\nclass ContributedListItem extends Component {\n\n    handleReadStory = (event) => {\n        this.props.history.push(`/existing-story/${this.props.story_id}`);\n    }\n\n    handleLike = (event) => {\n\n        this.props.dispatch({\n            type: 'LIKE_CONTRIBUTED_STORY',\n            payload: {\n                user_id: this.props.user_id,\n                story_id: this.props.story_id\n            }\n        });\n\n    }\n\n    componentDidMount = (event) => {\n        this.props.dispatch({\n            type: 'GET_CONTRIBUTORS',\n            payload: this.props.story_id\n        })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Card\n                    id='card'\n                    bordered={true}\n                    style={{ width: 325 }}\n                    cover={<img className=\"story-photo\" alt=\"headshot of author\" src={this.props.header_photo} />}\n                    actions={[<Button icon=\"like\" onClick={this.handleLike} ><Badge count={this.props.likes} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}></Badge>\n                    </Button>, <Button onClick={this.handleReadStory}>Read</Button>]}\n                >\n                    <Row>\n                        <Col span={24}>\n                            <h1 id=\"story-title\">{this.props.title}</h1>\n                        </Col>\n                    </Row>\n                    <Row gutter={8}>\n                        <Col span={6}>\n                        </Col>\n                        <Col span={6}>\n                            <img id=\"author-avatar\" alt=\"author avatar\" src={this.props.profile_pic} />\n                        </Col>\n\n                        <Col span={6}>\n                            <h5 id=\"story-author\" align=\"left\">By {this.props.author}</h5>\n                        </Col>\n                        <Col span={6}>\n                        </Col>\n                    </Row>\n                </Card>\n                <br />\n                <br />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    story: reduxStore.story,\n    storyDetail: reduxStore.storyDetail,\n    contributors: reduxStore.story.contributors\n});\n\nexport default connect(mapStateToProps)(ContributedListItem);\n\n// export default ContributedListItem;","import React, { Component } from 'react';\nimport ContributedListItem from './ContributedListItem';\n\nimport propTypes from 'prop-types';\nimport { Carousel, Button } from 'antd';\nimport { connect } from 'react-redux';\n\nclass ContributedList extends Component {\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_MY_CONTRIBUTIONS' });\n    }\n\n    static propTypes = {\n        contributedStories: propTypes.array.isRequired,\n    };\n    handleStartStory = () => {\n        // console.log('in hSS');\n        this.props.history.push(`/choose-template`)\n    }\n\n    render() {\n        return (\n            //this component will render all of the stories a \n            //user has started or contributed to.\n            //If the user has not begun or contributed to a story,\n            //a button prompting the user to create a new one will render.\n            <div className='contributions'>\n                {this.props.contributedStories.length !== 0 ?\n                    (<div>\n                        {/* <h3 align='center'>My Stories and Contributions</h3> */}\n                        {/* this div contains the actual story blocks */}\n                        <Carousel swipeToSlide>\n                            {this.props.contributedStories.map((story, i) => {\n                                return <ContributedListItem\n                                    story={story}\n                                    user_id={this.props.userInfo.id}\n                                    history={this.props.history}\n                                    story_id={story.story_id}\n                                    key={i}\n                                    header_photo={story.header_photo}\n                                    title={story.title}\n                                    intro={story.intro}\n                                    //combining the DB columns into a props item 'author'\n                                    //for simplicity on the client\n                                    author={story.first_name + ' ' + story.last_name}\n                                    profile_pic={story.profile_pic}\n                                    likes={story.likes}\n                                />\n                            })}\n                        </Carousel>\n                    </div>) : (<div className='center-button'>\n                        {/* render this button if the user has no contributed stories */}\n                        <Button align='center' type='primary' onClick={this.handleStartStory}>Start Your First Story!</Button>\n                    </div>)}\n            </div>\n\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    story: state.story,\n    userInfo: state.user.userInfo,\n    contributedStories: state.story.contributedStoryReducer\n});\n\nexport default connect(mapStateToProps)(ContributedList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './CardDesigns.css';\n\n//Ant design imports\nimport { Card, Button, Icon, Row, Col } from 'antd';\n\nclass TopStoryItem extends Component {\n\n    handleReadStory = (event) => {\n        console.log('in hRS', this.props);\n\n        this.props.history.push(`/existing-story/${this.props.story_id}`);\n    }\n\n    handleLike = (event) => {\n        console.log(this.props);\n\n        this.props.dispatch({\n            type: 'LIKE_TOP_STORY',\n            payload: {\n                user_id: this.props.user_id,\n                story_id: this.props.story_id\n            }\n        });\n    }\n\n    componentDidMount = (event) => {\n        this.props.dispatch({\n            type: 'GET_CONTRIBUTORS',\n            payload: this.props.story_id\n        })\n    }\n\n    render() {\n\n        return (\n            <div align='center'>\n                <Card\n                    id='card'\n                    bordered={true}\n                    style={{ width: 325 }}\n                    cover={<img className=\"story-photo\" alt=\"headshot of author\" src={this.props.header_photo} />}\n                    actions={[<Button onClick={this.handleLike} ><Icon type='like' />\n                    </Button>, <Button onClick={this.handleReadStory}>Read</Button>]}\n                >\n                    <Row>\n                        <Col span={24}>\n                            <h1 id=\"story-title\">{this.props.title}</h1>\n                        </Col>\n                    </Row>\n                    <Row gutter={8}>\n                        <Col span={6}>\n                        </Col>\n                        <Col span={6}>\n                            <img id=\"author-avatar\" alt=\"author avatar\" src={this.props.profile_pic} />\n                        </Col>\n\n                        <Col span={6}>\n                            <h5 id=\"story-author\" align=\"left\">By {this.props.author}</h5>\n                        </Col>\n                        <Col span={6}>\n                        </Col>\n                    </Row>\n                </Card>\n                <br />\n                <br />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    story: reduxStore.story,\n    storyDetail: reduxStore.storyDetail\n});\n\nexport default connect(mapStateToProps)(TopStoryItem);\n// export default TopStoryItem;","import React, { Component } from 'react';\nimport TopStoryItem from './TopStoryItem';\n\n// import Slider from 'react-slick';\nimport { Carousel } from 'antd';\nimport { connect } from 'react-redux';\n\nclass TopStoryList extends Component {\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_TOP_STORIES' });\n    }\n\n    render() {\n\n        return (\n            <div className='top-stories'>\n                {/* <h3 align='center'>Top Stories at Prime</h3> */}\n                {/* this div contains the individual top stories */}\n                <Carousel swipeToSlide>\n                    {this.props.topStories.map((story, i) => {\n                        return <TopStoryItem\n                            user_id={this.props.userInfo.id}\n                            story_id={story.story_id}\n                            history={this.props.history}\n                            key={i}\n                            header_photo={story.header_photo}\n                            title={story.title}\n                            intro={story.intro}\n                            author={story.first_name + ' ' + story.last_name}\n                            profile_pic={story.profile_pic}\n                            likes={story.likes} />\n\n                    })}\n                </Carousel>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    userInfo: state.user.userInfo,\n    topStories: state.story.topStoriesReducer\n});\n\nexport default connect(mapStateToProps)(TopStoryList);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Typography } from 'antd';\nimport './SubHeader.css';\n\nconst { Title } = Typography;\n\nexport default class SubHeader extends Component {\n    \n    static propTypes = {\n        headerText: PropTypes.string.isRequired,\n    }\n    render() {\n        return (\n            <Row type=\"flex\"\n                 justify=\"space-around\"\n                 align=\"middle\"\n                 gutter={16}\n                 className='sub-header'>\n                <Title \n                    level={3} \n                    className='sub-header-text'>\n                    {this.props.headerText}\n                </Title>\n            </Row>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//Ant design\nimport { Divider, notification } from 'antd';\n\nimport ContributedList from './ContributedList';\nimport TopStoryList from './TopStoryList';\nimport SubHeader from '../Common/SubHeader';\n\nimport './CardDesigns.css';\n\nclass HomePage extends Component {\n    componentDidMount() {\n        if (this.props.invite.length > 0) {\n            notification.open({\n                message: `Welcome, ${this.props.user.first_name}`,\n                description: `You have ${this.props.invite.length} notifications`,\n                duration: 0,\n                onClick: () => {\n                    // console.log('Notification Clicked!');\n                    this.props.history.push('/notification');\n                },\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div align=\"center\">\n            <SubHeader headerText='Home'/>\n                <Divider>My Stories and Contributions</Divider>\n                <ContributedList\n                    history={this.props.history}\n                />\n                <Divider>Top Stories at Prime</Divider>\n                <TopStoryList\n                    history={this.props.history}\n                />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    invite: reduxStore.notification.invite,\n    user: reduxStore.user.userInfo,\n});\n\nexport default connect(mapStateToProps)(HomePage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Notification.css'\n\nimport { List, Avatar, Button } from 'antd';\n\n\nclass InviteList extends Component {\n    buildListItems = (item) => {\n        return <List.Item>\n            <List.Item.Meta\n                avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                title={<a href=\"https://ant.design\">title</a>}\n                description={item.status}\n            />\n        </List.Item>\n    }\n\n    handleInvite = (invite, status, event) => {\n        console.log('error error')\n        this.props.dispatch({\n            type: `SEND_INVITE_RESPONSE`,\n            payload: { invite_id: invite.invite_id, status: status }\n        })\n        if (status === 'accepted') {\n            this.props.history.push(`/existing-story/${invite.story_id}`);\n        }\n    }\n\n\n\n    render() {\n        const { invite } = this.props;\n        return (\n\n            <List\n                className=\"notification-item\"\n                itemLayout=\"horizontal\"\n                dataSource={invite}\n                renderItem={invite => (\n                    <List.Item actions={[\n                        <Button size=\"small\" id=\"notification-btn\" onClick={this.handleInvite.bind(this, invite, 'accepted')}>Accept</Button>,\n                        <Button size=\"small\" id=\"notification-btn\" onClick={this.handleInvite.bind(this, invite, 'rejected')}>Maybe Later</Button>,\n                    ]}>\n                        <List.Item.Meta\n                            avatar={<Avatar src={invite.profile_pic} />}\n                            description={`${invite.first_name} ${invite.last_name} invited you to contribute to: \"${invite.title}\"`}\n                        />\n                    </List.Item>\n                )}\n\n            />\n\n        )\n    }\n};\n\n\nexport default connect()(InviteList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport SubHeader from '../Common/SubHeader';\nimport InviteList from './InviteList';\nimport { Divider } from 'antd';\n\nclass Notification extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({ type: 'GET_INVITES' })\n    }\n\n    render() {\n        const { invite } = this.props\n        return (\n            <div>\n                {/* <div>\n                <br/>\n                <h1 align='center'>Notifications</h1>\n                {invite.length > 0 ? \n                (<InviteList invite={invite}/>)\n                :\n                (<Divider>You have no invites at this time.</Divider>)}\n            </div> */}\n                <div className=\"list\"\n                    align=\"center\">\n                    <SubHeader headerText='Notifications' />\n                    {/* <h1>Notifications</h1> */}\n                    {invite.length > 0 ?\n                        <InviteList\n                            story_id={invite.story_id}\n                            history={this.props.history}\n                            invite={invite}\n                        />\n                        :\n                        <Divider>You have no invites at this time</Divider>\n\n                    }\n\n                </div>\n            </div>\n        )\n    }\n};\n\nconst mapRStoProps = (rs) => {\n    return { invite: rs.notification.invite }\n}\n\nexport default connect(mapRStoProps)(Notification);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card, Icon, Button, Spin } from 'antd';\nimport './ProfilePage.css';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass ContributedStoryListItem extends Component {\n\n    handleLike = (event) => {\n        this.props.dispatch({\n            type: 'LIKE_CONTRIBUTED_STORY',\n            payload: {\n                user_id: this.props.user_id,\n                story_id: this.props.story_id\n            }\n        });\n    }\n\n    handleReadStory = (event) => {\n        this.props.history.push(`/existing-story/${this.props.story_id}`);\n    }\n\n    componentDidMount = () => {\n        this.handleDispatch();\n    }\n\n    handleDispatch = () => {\n        this.props.dispatch({\n            type: 'GET_STORY_LIKES',\n            payload: this.props.story.contributedStoryReducer[0].story_id\n        })\n    }\n\n    handleLike = (event) => {\n        this.props.dispatch({\n            type: 'LIKE_CONTRIBUTED_STORY',\n            payload: {\n                user_id: this.props.user_id,\n                story_id: this.props.story.contributedStoryReducer[0].story_id\n            }\n        });\n    }\n\n    render() {\n\n        return (\n            <div className=\"card-div\">\n                {this.props.storyDetail.likes.length !== 0 ?\n                    <Card\n                        className=\"profile-story-cards\"\n                        style={{ width: 325 }}\n                        cover={<img className=\"story-photo\" src={this.props.header_photo} alt=\"story\" />}\n                        actions={[<Button id=\"like-btn\" onClick={this.handleLike}><Icon type='like' />Like</Button>,\n                        <Button id=\"like-btn\" onClick={this.handleReadStory}>Read</Button>\n                        ]}\n                    >\n\n                        <h3 className=\"story-title\" onClick={this.handleReadStory} level={4} >{this.props.title}</h3>\n                        <p>{this.props.likes} Likes</p>\n\n                    </Card> : (<Spin indicator={antIcon} />)}\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    story: reduxStore.story,\n    storyDetail: reduxStore.storyDetail\n});\n\nexport default connect(mapStateToProps)(ContributedStoryListItem);","import React, { Component } from 'react';\nimport ContributedStoryListItem from './ContributedStoryListItem';\n\n\nimport { connect } from 'react-redux';\n\n//this file is being used on the profile page to render\n//all of the stories that a user has BEGUN\nclass ContributedStoryList extends Component {\n\n    componentDidMount = () => {\n        //the first dispatch gets the stories user is contributing to and renders them on\n        //the profile page\n        this.props.dispatch({ type: 'GET_MY_CONTRIBUTIONS' });\n    }\n\n    render() {\n\n\n        return (\n            <div className='contributions'>\n                <div>\n                    {/* {JSON.stringify(this.props.storyDetail.likes)} */}\n\n                    {this.props.story.contributedStoryReducer.map((story, i) => {\n                        return <ContributedStoryListItem\n                            user_id={this.props.userInfo.id}\n                            key={i}\n                            history={this.props.history}\n                            story_id={story.story_id}\n                            header_photo={story.header_photo}\n                            title={story.title}\n                            intro={story.intro}\n                            //just combining the DB columns into a props item 'author'\n                            //for simplicity on the client\n                            author={story.first_name + ' ' + story.last_name}\n                            profile_pic={story.profile_pic}\n                            likes={story.likes}\n                        />\n                    })}\n\n                </div>\n            </div>\n\n        )\n    }\n};\n\nconst mapStoreToProps = (reduxStore) => ({\n    userInfo: reduxStore.user.userInfo,\n    story: reduxStore.story,\n    storyDetail: reduxStore.storyDetail.likes,\n    contributedStories: reduxStore.story.contributedStoryReducer,\n\n});\n\nexport default connect(mapStoreToProps)(ContributedStoryList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Col, Icon, Typography, Divider, Button, Input, Modal } from 'antd';\n\nimport './ProfilePage.css';\nimport 'antd/dist/antd.css';\nimport moment from 'moment'\n\nimport ContributedStoryList from './ContributedStoryList';\n\nconst { Title } = Typography;\nconst { Text } = Typography;\nconst { TextArea } = Input;\n\n// this component displays the user's profile information and stories\nclass ProfilePage extends Component {\n    state =\n        {\n            isHidden: true,\n            id: this.props.user.userInfo.id,\n            first_name: this.props.user.userInfo.first_name,\n            last_name: this.props.user.userInfo.last_name,\n            bio: this.props.user.userInfo.bio,\n            visible: false,\n            file: null\n        };\n    // functions for image upload   \n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = (e) => {\n        console.log(e);\n        this.submitFile();\n        this.setState({\n            visible: false,\n        });\n    }\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n    submitFile = (event) => {\n        // console.log('in sF');\n\n        // event.preventDefault();\n        const formData = new FormData();\n        formData.append('file', this.state.file);\n        const action = {\n            type: 'ADD_IMAGE_AWS',  //directs dispach on which saga to use based on props\n            nextType: `ADD_IMAGE_${'PERSON'}`,\n            payload: formData,\n            id: this.props.user.userInfo.id\n        }\n        this.props.dispatch(action);\n        // console.log(this.props.photoDetails.typeOfPhoto);\n    }\n    appendPic = () => {\n        let statePic = this.state.file\n        let picURL = URL.createObjectURL(statePic)\n        return <img height='150' src={picURL} alt=\"thumbnail chosen\" />\n    }\n    handleFileUpload = (event) => {\n        this.setState({\n            file: event.target.files[0]\n        })\n    }\n    // functions for editing input fields\n    onEditBtnClick() {\n        this.setState(state => ({\n            isHidden: !state.isHidden\n        }));\n    }\n    handleChange = propertyName => event => {\n        this.setState({ [propertyName]: event.target.value });\n    }\n    submitEditedName() {\n        const editedName = { id: this.state.id, first_name: this.state.first_name, last_name: this.state.last_name, bio: this.state.bio }\n        console.log(editedName);\n        this.props.dispatch({ type: 'EDIT_PROFILE', payload: editedName });\n        this.setState(state => ({\n            isHidden: !state.isHidden\n        }));\n    }\n    testThings = () => {\n        console.log(this.props.reduxStore.user);\n    }\n\n\n    render() {\n\n        return (\n\n            <div className=\"container\" >\n                <div className=\"profile-header\">\n                    <Row gutter={16}>\n                        {/* {JSON.stringify(this.props.user.userInfo)} */}\n                        <Col xs={6}><img onClick={this.showModal} className=\"contain\" src={this.props.user.userInfo.profile_pic} alt=\"profile-pic\" /></Col>\n\n                        {this.state.isHidden ? this.renderStaticName() : this.renderEditName()}\n\n                    </Row>\n                    <Divider />\n                    <Row gutter={16}>\n                        <Col xs={24}></Col>\n                    </Row>\n                    <div className=\"stats-div\">\n                        <Row gutter={16}>\n                            <Col xs={24}>\n                                <Icon className=\"profile-element\" type=\"calendar\" style={{ fontSize: \"14px\" }} /><Text className=\"stats-text\">Member since&nbsp;{moment(this.props.user.userInfo.date_created).format(\"MMM Do, YYYY\")}</Text>\n                            </Col>\n                        </Row>\n                        <Row gutter={16}>\n                            <Col xs={24}>\n                                <Icon className=\"profile-element\" type=\"book\" style={{ fontSize: \"14px\" }} /><Text className=\"stats-text\">{this.props.story.userStoryReducer.length}&nbsp;Stories</Text>\n                            </Col>\n                        </Row>\n                        <Row gutter={16}>\n                            <Col xs={24}>\n                                <Icon className=\"profile-element\" type=\"profile\" style={{ fontSize: \"14px\" }} /><Text className=\"stats-text\">{this.props.story.contributedStoryReducer.length}&nbsp;Contributions</Text>\n                            </Col>\n                        </Row>\n                    </div>\n                    <Divider />\n\n                </div>\n                <div align=\"center\">\n                    <Row gutter={8}>\n                        <Col xs={24}>\n                            <Title level={4}>Stories</Title>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col xs={24}>{this.props.story ?\n                            (<ContributedStoryList history={this.props.history} />) : (<p>loading...</p>)}</Col>\n                    </Row>\n                </div>\n\n                {/* this code is for the conditionally rendered modal, which only\n                appears when the profile picture is clicked on */}\n                <div>\n                    <Modal\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                    >\n                        <Row type=\"flex\" justify=\"center\">\n                            <div>Choose Photo From Library:</div>\n                            <input type=\"file\" accept=\"image/*\" onChange={this.handleFileUpload}></input>\n                            {this.state.file !== null && this.appendPic()}\n                        </Row>\n                    </Modal>\n                </div>\n            </div >\n\n        )\n    }\n    // conditionally rendered fields, rendered according to whether or not the edit button has been clicked\n    // edit field to change user's first and last name; static text transforms into two text fields\n    renderEditName() {\n        return (\n            <Col xs={12}>\n                <Input className=\"edit-input\" size=\"small\" onChange={this.handleChange('first_name')} placeholder='first name' />\n                <Input className=\"edit-input\" size=\"small\" onChange={this.handleChange('last_name')} placeholder='last name' />\n                <TextArea className=\"edit-input\" onChange={this.handleChange('bio')} placeholder=\"enter a short bio\" />\n                <Button className=\"edit-element\" id=\"edit-btn\" onClick={this.onEditBtnClick.bind(this)}>Cancel</Button>\n                <Button className=\"edit-element\" id=\"edit-btn\" onClick={this.submitEditedName.bind(this)}>Save</Button>\n            </Col>\n        )\n    }\n    // field that displays first, last name, and bio\n    renderStaticName() {\n        return (\n            <div>\n                <Col xs={16}>\n                    <Text id=\"user-name\" level={4}>{this.props.user.userInfo.first_name}&nbsp;{this.props.user.userInfo.last_name}</Text>\n                </Col>\n                <Row gutter={16}>\n                    <Col xs={8}></Col>\n                    <Col xs={16}>\n                        <Text className=\"text\">{this.props.user.userInfo.bio}</Text>\n                    </Col>\n                </Row>\n                <Row gutter={16}>\n                    <Col xs={6}></Col>\n                    <Col xs={18}><Button size=\"small\" className=\"edit-element\" id=\"edit-btn\" onClick={this.onEditBtnClick.bind(this)}>Edit Profile</Button>\n                    </Col>\n                </Row>\n\n            </div>\n\n\n        )\n    }\n\n\n}\n\n\nconst mapStoreToProps = reduxStore => ({\n    user: reduxStore.user,\n    story: reduxStore.story,\n});\n\nexport default connect(mapStoreToProps)(ProfilePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Select} from 'antd';\n\nimport './SearchBar.css'\n\nclass SearchBar extends Component {\n    state = {\n        dropdown: \"AUTHOR\",\n    }\n    handleChange = (value) => {\n        this.setState({\n            dropdown: `${value}`\n        })\n    }\n    sendSearch = (event) => {\n        const action = {\n            type: `GET_SEARCH_STORIES_${this.state.dropdown}`,\n            payload: event.toLowerCase()  //to make searching less specific\n        };\n        this.props.dispatch(action);\n    }\n    render() {\n        const Search = Input.Search;\n        const Option = Select.Option;\n        const selectBefore = (\n            <Select defaultValue=\"Author\" onChange={this.handleChange} style={{ width: 115 }} justify=\"center\">\n                <Option value=\"AUTHOR\" >Author</Option>\n                <Option value=\"TITLE\">Title</Option>\n                <Option value=\"DESCRIPTION\">Description</Option>\n            </Select>\n        );\n        return (\n            <div className='box'>\n                <Search\n                    addonBefore={selectBefore}\n                    placeholder=\"Search\"\n                    onSearch={value => this.sendSearch(value)}\n                    style={{ width: '100%' }}\n                />\n            </div>\n        )\n    }\n};\n\nexport default connect()(SearchBar);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport { List, Avatar, Row, Col, Typography, Divider } from 'antd';\n\nimport './SearchBar.css';\n\nclass ResultListItem extends Component {\n  state = {\n    photoFlipped: false,\n  }\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  handleClick = () => {\n    this.props.history.push(`/existing-story/${this.props.item.story_id}`);\n  }\n  handleDescription = () => {\n    if (this.props.item.intro.length < 100) {\n      return this.props.item.intro.substring(0, 100)\n    } else if (this.props.item.intro.length) {\n      return `${this.props.item.intro.substring(0, 100)}...`\n    }\n  }\n\n  flipPhoto = () => {\n    this.setState({ photoFlipped: !this.state.photoFlipped })\n  }\n\n  render() {\n    const { title, header_photo, intro, caption, full_name, profile_pic, story_id } = this.props.item;\n\n    // console.log(item.intro.substring(0, 40));\n    return (\n      <Row type='flex' justify='center'>\n        <Col span={18}>\n          <List.Item\n            key={title}\n            // card photo can be flipped to show caption or photo\n            extra={\n              this.state.photoFlipped ?\n                <div\n                  style={{ width: 272, height: 204, borderStyle: 'solid'  }}\n                  onClick={this.flipPhoto}>\n                  <Typography style={{ textAlign: 'center', paddingTop: 20}}>\n                    {caption}\n                  </Typography>\n                </div>\n                :\n                <img\n                  alt=\"logo\"\n                  src={header_photo}\n                  onClick={this.flipPhoto}\n                  style={{ objectFit: 'contain', width: 272 }} />}\n          >\n            {/* these are the contents of the list item */}\n            <Row type='flex' align='middle' justify='center'>\n              <Col span={24}>\n                <Typography.Title level={4} style={{ textDecoration: 'none', textAlign: 'center' }}>\n                  <Link to={`/existing-story/${story_id}`} >{title}</Link>\n                </Typography.Title>\n              </Col>\n              \n              <Col span={24}>\n                <Row type='flex' align='middle' justify='center' style={{ marginBottom: 20 }}>\n                  <Col span={8}>\n                    <Avatar size={64} src={profile_pic} />\n                  </Col>\n                  <Col span={12}>\n                    <Typography>\n                      {`By ${full_name}`}\n                    </Typography>\n                  </Col>\n                </Row>\n              </Col>\n\n\n\n              {intro.length > 80 &&\n                <Col span={20}>\n                  <Typography.Paragraph>\n                    {`${intro.substring(0, 80)}...`}\n                  </Typography.Paragraph>\n                </Col>\n              }\n            </Row>\n          </List.Item>\n\n        </Col>\n        <Divider></Divider>\n      </Row>\n\n\n      // <Row type=\"flex\" align=\"middle\" className='search-story'>\n      //   <Col span={12}>            \n      //   <List.Item>\n      //     <List.Item.Meta\n      //       title={item.title}\n      //       description={this.handleDescription()}\n      //       align=\"top\"\n\n      //     />\n      //     {item.content}\n      //     </List.Item> {/*end first item */}\n      //     <List.Item\n      //       key={item.title}\n      //       actions={<Icon type=\"like\" text=\"156\" />}\n      //     >\n      //       <List.Item.Meta\n      //       className=\"list-content\"\n      //         avatar={<Avatar src={item.profile_pic} />}\n      //         description={item.full_name}\n      //       />\n      //     </List.Item>\n      //   </Col>\n      //   <Col span={12}>\n      //     <Card\n      //       onClick={this.handleClick}\n      //       hoverable\n      //       style={{ width: 200 }}\n      //       cover={<img alt=\"example\" src={item.header_photo} />}\n      //     >\n      //       <Meta\n      //         description={item.caption}\n      //       />\n      //     </Card>\n      //   </Col>\n      // </Row>\n    )\n  }\n}\n\nexport default withRouter(ResultListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { List, Typography } from 'antd';\nimport ResultListItem from './ResultListItem';\n\n\nclass SearchResult extends Component {\n    render() {\n        const { searchResults } = this.props;\n\n        return (\n            <div>\n                {searchResults.length > 0 ?\n                <div>\n                    <List\n                        itemLayout=\"vertical\"\n                        size=\"large\"\n                        pagination={{\n                            onChange: (page) => {\n                                console.log(page);\n                            },\n                            pageSize: 2,\n                            hideOnSinglePage: true,\n                            style: {marginTop: 0, marginBottom: 20}\n                        }}\n                        dataSource={searchResults}\n                        renderItem={item => (\n                            <ResultListItem item={item} />\n                        )}\n                    />\n                </div>\n                :\n                <div>\n                    <Typography align='center'>\n                        Your search results will appear here.\n                    </Typography>\n                </div>\n                }\n\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (rs) => ({\n    searchResults: rs.searchResults,\n});\n\nexport default connect(mapStateToProps)(SearchResult);","import React, { Component } from 'react';\n\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResult';\nimport SubHeader from '../Common/SubHeader';\nimport { Col, Row } from 'antd';\n\nexport default class SearchMain extends Component {\n  render() {\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={24}>\n            <SubHeader headerText='Browse Stories' />\n          </Col>\n          <Col span={18}>\n            <SearchBar />\n          </Col>\n          <Col span={24}>\n            <SearchResults />\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Modal, Button, Row, Avatar, Input, Col } from 'antd';\n\nimport './ImageUpload.css';\n\nclass ImageUpload extends Component {\n    state = {\n        visible: false,\n        file: null,\n        confirmLoading: false,\n    }\n\n    //photo details contains title for button name and typeOfPhoto keywords for next saga\n    static propTypes = {\n        photoDetails: PropTypes.object.isRequired,\n        editMode: PropTypes.bool,\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        console.log(e);\n        this.submitFile();\n        this.setState({\n            confirmLoading: true,\n        });\n        setTimeout(() => {\n            this.setState({\n                visible: false,\n                file: null,\n                confirmLoading: false,\n            });\n        }, 2000);\n    }\n\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n    submitFile = (event) => {\n        // console.log('in sF');\n        // event.preventDefault();\n        const formData = new FormData();\n        formData.append('file', this.state.file);\n        const action = {\n            type: 'ADD_IMAGE_AWS',  //directs dispach on which saga to use based on props\n            nextType: `ADD_IMAGE_${this.props.photoDetails.typeOfPhoto}`,\n            payload: formData,\n            id: this.props.user.userInfo.id,\n            chapterId: this.props.photoDetails.chapterId,\n            storyId: this.props.photoDetails.storyId,\n        }\n        this.props.dispatch(action);\n        // console.log(this.props.photoDetails.typeOfPhoto);\n    }\n\n    handleFileUpload = (event) => {\n        this.setState({\n            file: event.target.files[0]\n        })\n    }\n\n    render() {\n        const { buttonName, title } = this.props.photoDetails;\n        const { visible, confirmLoading, file } = this.state;\n        // determines button class based on whether its used on for story editing\n        let buttonClass;\n        if (this.props.editMode) {\n            buttonClass = 'edit-button';\n        }\n        let thumbnailSrc = file;\n        if (this.state.file !== null) {\n            thumbnailSrc = URL.createObjectURL(file);\n        }\n        return (\n            <div>\n                   <Button \n                    type=\"default\" \n                    onClick={this.showModal} \n                    className={buttonClass}\n                    style={{width: '100%'}}>\n                    {buttonName}\n                </Button> \n                <Modal\n                    title={title}\n                    style={{ top: 20 }}\n                    visible={visible}\n                    onOk={this.handleOk}\n                    okText='Save Photo'\n                    onCancel={this.handleCancel}\n                    confirmLoading={confirmLoading}\n                >\n                    {/* <div>Take A Photo: <input label='upload file' type='file' accept=\"image/*\" capture=\"camera\" onChange={this.handleFileUpload} /></div> This is being commented out for the sake of the presentation since it is useless on browser */}\n                    {/* <h2>OR</h2> */}\n                    <Row type=\"flex\" justify=\"center\">\n                        <Col>\n                            <Input type=\"file\" accept=\"image/*\" onChange={this.handleFileUpload} />\n                        </Col>\n                        <Col style={{marginTop: 10}}>\n                            <Avatar shape=\"square\" size={100} icon=\"picture\" src={thumbnailSrc} />\n                        </Col>\n                    </Row>\n                </Modal>\n\n            </div>\n        );\n    }\n}\nconst mapStoreToProps = reduxStore => ({\n    user: reduxStore.user,\n})\nexport default connect(mapStoreToProps)(ImageUpload)","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\n\nimport { Modal, Button, Input } from 'antd';\n\nclass EditButton extends Component {\n    state = {\n        modalVisible: false,\n        editedValue: null,\n    }\n\n    static propTypes = {\n        valueToEdit: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n    }\n\n    handleModalBtn = (value, e) => {\n        this.setState({ modalVisible: value, })\n    }\n\n    handleEdit = (e) => {\n        // console.log(e)\n        this.setState({ editedValue: e.target.value })\n    }\n\n    handleSubmit = () => {\n        // console.log('in submit');\n        const { editedValue } = this.state;\n        let { name, id, type } = this.props;\n        if (editedValue !== null) {\n            switch (type) {\n                case ('Chapter'):\n                    this.props.dispatch({\n                        type: 'EDIT_CHAPTER',\n                        payload: {\n                            id: id,\n                            colName: name,\n                            updatedValue: editedValue,\n                        }\n                    });\n                    break;\n                case ('Story'):\n                    this.props.dispatch({\n                        type: 'EDIT_STORY',\n                        payload: {\n                            id: id,\n                            colName: name,\n                            updatedValue: editedValue,\n                        }\n                    });\n                    break;\n                default:\n                    break;\n            }\n        }\n        return this.setState({modalVisible: false})\n    }\n\n    render() {\n        // console.log(this.props);\n        const { editedValue } = this.state;\n        const { valueToEdit, name, type } = this.props;\n        return (\n            <div>\n                <Button\n                    type=\"default\"\n                    icon='edit'\n                    onClick={this.handleModalBtn.bind(this, true)}\n                    className='edit-button'>\n                    {`${name}`}</Button>\n                <Modal\n                    title={`Editing ${type} ${name}`}\n                    style={{ top: 20 }}\n                    visible={this.state.modalVisible}\n                    onOk={this.handleSubmit}\n                    okText='Save Edit'\n                    onCancel={() => this.handleModalBtn(false)}\n                >\n                    <Input.TextArea value={editedValue === null ? valueToEdit : editedValue} onChange={this.handleEdit} style={{minHeight: 100}}/>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default connect()(EditButton);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Row, Col, Modal } from 'antd';\n\nconst confirm = Modal.confirm;\n\nclass FinalizeStoryButton extends Component {\n\n    handlePostStory = () => {\n        console.log('post story clicked');\n        //confirm finishing story with modal\n        \n        //onOk function does not have access to component scope so pulling these off props now\n        const { dispatch, summary } = this.props;\n        confirm({\n            title: 'Are you done editing and ready to complete this story?',\n            content: `Please review the story summary, chapter contents, and photos before completing the story.`,\n            okText: 'Complete Story',\n            okType: 'danger',\n            okButtonProps: {\n                type: 'danger',\n            },\n            cancelText: 'Keep Editing',\n            onOk() {\n                dispatch({\n                    type: 'COMPLETE_STORY',\n                    payload: summary.id\n                })\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n\n\n    }\n\n    render() {\n        const { user, summary } = this.props;\n        return (\n            <div>\n                {/* only shows button if user is author and story has not already been completed */}\n                {user.id === summary.author_id && summary.completed === false &&\n                    <Row type='flex' justify='center'>\n                        <Col span={18}>\n                            <Button\n                                type=\"primary\"\n                                onClick={this.handlePostStory}\n                                style={{ width: '100%', margin: '20px 0' }}>\n                                Finalize Story</Button>\n                        </Col>\n                    </Row>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        user: rs.user.userInfo,\n        summary: rs.storyDetail.summary[0]\n    }\n}\n\nexport default connect(mapRStoProps)(FinalizeStoryButton);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\n\nimport ImageUpload from './../../../ImageUpload/ImageUpload.js';\nimport EditButton from '../EditButton';\nimport FinalizeStoryButton from '../FinalizeStoryButton';\nimport SubHeader from '../../../Common/SubHeader';\n\nimport { PageHeader, Pagination, Card, Row, Col, Button } from 'antd';\n\nclass ChapterView extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired,\n        contributor: PropTypes.array.isRequired,\n        editMode: PropTypes.bool.isRequired,\n    };\n\n    turnPage = (page, pageSize) => {\n        this.props.history.push(`${page - 1}`)\n    }\n\n    handleReturn = () => {\n        this.props.history.push(`/existing-story/${this.props.summary[0].id}`)\n    }\n\n    render() {\n        //took out likes for now\n        const { summary, chapter, contributor, editMode } = this.props;\n        const { chapterId } = this.props.match.params;\n        console.log(chapterId, chapter);\n\n        // console.log('editMode:', this.state.editMode);\n        const contributorSum = contributor.length;\n        let contributorDescription = '';\n        if (contributorSum === 0) {\n            contributorDescription = '';\n        } else if (contributorSum === 1) {\n            contributorDescription = ' and one contributor';\n        } else if (contributorSum < 2) {\n            contributorDescription = ` and ${contributorSum} contributors`;\n        }\n        const currChapter = chapter[chapterId];\n        console.log('currChapter', currChapter);\n\n        return (\n            <div>\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                    <Col span={24}>\n                        <SubHeader headerText='Chapter Details' />\n                    </Col>\n                </Row>\n                {currChapter !== undefined && summary.length > 0 ?\n                    <div>\n                        <Row type='flex' justify=\"space-around\" align=\"middle\">\n                            <PageHeader\n                                title={`Chapter ${currChapter.order}: ${currChapter.title}`}\n                                subTitle={`in story \"${summary[0].title}\" by ${summary[0].author_name}${contributorDescription}. `}\n                            />\n                            {editMode &&\n                                <Col style={{ marginBottom: 20 }}>\n                                    <EditButton\n                                        valueToEdit={currChapter.title}\n                                        type='Chapter'\n                                        name='Title'\n                                        id={currChapter.id} />\n                                </Col>\n                            }\n                        </Row>\n                        <Card\n                            style={{ width: 300, display: 'block', margin: 'auto', marginBottom: 10, }}\n                            cover={<img alt={`Chapter ${chapterId} header`} src={currChapter.chapter_photo} />}>\n                            <Card.Meta\n                                description={currChapter.text}\n                            />\n                        </Card>\n\n                        {editMode &&\n                            <Row type='flex' justify='space-around' style={{marginBottom: 20}}>\n                                <Col>\n                                    <EditButton valueToEdit={currChapter.text}\n                                        type='Chapter'\n                                        name='Text'\n                                        id={currChapter.id} />\n                                </Col>\n                                <Col>\n                                    <ImageUpload\n                                        photoDetails={{\n                                            typeOfPhoto: 'CHAPTER',\n                                            title: `Changing Chapter ${currChapter.order} Photo`,\n                                            chapterId: currChapter.id,\n                                            buttonName: \"Change Photo\"\n                                        }}\n                                        editMode={editMode} />\n                                </Col>\n                            </Row>\n                        }\n                        \n                        <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                            <Pagination\n                            defaultCurrent={currChapter.order}\n                            pageSize={1}\n                            total={Number(chapter.length)}\n                            onChange={this.turnPage}\n                            hideOnSinglePage={true} />\n\n                            <Col span={18}>\n                                <Button \n                                    onClick={this.handleReturn}\n                                    style={{marginTop: 10, marginBottom: 10, display: 'block', width: '100%'}}>\n                                    Return To Summary\n                                </Button>\n                            </Col>\n                        </Row>\n                        <FinalizeStoryButton />\n                    </div>\n                    :\n                    <p> Page is loading.</p>\n                }\n\n\n\n            </div>\n        )\n    }\n};\n\nconst ChapterViewWithRouter = withRouter(ChapterView);\n\nexport default connect()(ChapterViewWithRouter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AutoComplete } from 'antd';\n\nimport { Alert, Input, Icon } from 'antd';\n\nconst Option = AutoComplete.Option;\n\nclass ContributorForm extends Component {\n  state = {\n    person: {},\n    alert: false,\n  }\n\n  handleSearch = (value) => {\n    if (value.length > 1) {\n      this.props.dispatch({\n        type: 'GET_EMPLOYEES',\n        payload: value,\n      })\n    }\n  }\n\n  onChange = (value) => {\n    this.setState({\n      person: this.props.employeeResults[value]\n    })\n  }\n\n  handleClick = () => {\n    const repeat = this.props.pendingContributors.filter((c) => { return c.person_id === this.state.person.person_id });\n    if (this.state.person.first_name === undefined) {\n      return null;\n    } else if (repeat.length > 0) {\n      this.setState({ alert: true, });\n      setTimeout(() => { this.setState({ alert: false, }) }, 2000);\n    } else {\n      this.props.dispatch({\n        type: 'ADD_PENDING_CONTRIBUTORS',\n        payload: this.state.person\n      })\n      this.props.dispatch({ type: 'CLEAR_EMPLOYEE_RESULTS' })\n    }\n  }\n\n  render() {\n    const searchResults = this.props.employeeResults.map(\n      (employeeObj, i) => {\n        return (\n          <Option key={i} >\n            {`${employeeObj.first_name} ${employeeObj.last_name}`}\n          </Option>);\n      });\n    return (\n      <div>\n        {this.state.alert ?\n          <div>\n            <Alert message={\n              `User is already a contributor`}\n              type=\"warning\"\n              showIcon />\n          </div>\n          :\n          null\n        }\n        <AutoComplete\n          style={{ width: \"100%\" }}\n          onSearch={this.handleSearch}\n          onChange={this.onChange}\n          defaultValue=''\n          placeholder=\"begin typing name\"\n          dataSource={searchResults}>\n          <Input\n            addonAfter={(\n              <Icon type=\"user-add\" onClick={this.handleClick} />\n            )}\n          />\n        </AutoComplete>\n      </div>\n    );\n  }\n}\n\nconst mapRStoProps = (rs) => {\n  return {\n    employeeResults: rs.contributor.employeeResults,\n    pendingContributors: rs.contributor.pending\n  }\n}\n\nexport default connect(mapRStoProps)(ContributorForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Avatar, List } from 'antd';\n\nclass ContributorItem extends Component {\n\n    handleClick = () => {\n        this.props.dispatch({\n            type: 'REMOVE_PENDING_CONTRIBUTOR',\n            payload: this.props.item,\n        })\n    }\n\n    render() {\n        const { item, editMode } = this.props;\n        \n        // only lets editors remove contributors\n        let itemClick;\n        if(editMode) {\n            itemClick = this.handleClick;\n        }\n        return (\n            <List.Item onClick={itemClick}>\n                <List.Item.Meta\n                    avatar={<Avatar src={`${item.profile_pic}`} />}\n                    title={`${item.first_name} ${item.last_name}`}\n                />\n            </List.Item>\n        )\n    }\n};\n\nexport default connect()(ContributorItem);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContributorItem from './ContributorItem';\n\nimport { List, Typography } from 'antd';\n\nclass ContributorList extends Component {\n    render() {\n        const { pendingContributors, storyContributors, editMode } = this.props;\n        let dataSource = pendingContributors;\n\n        //checks to see if list is being used on existing story view\n        if (editMode !== undefined){\n            dataSource = [...storyContributors, ...pendingContributors];\n        }\n        return (\n            <div>\n                <Typography align=\"center\">\n                    Click contributor to remove them.\n                </Typography>\n                {pendingContributors &&\n                    <List\n                        itemLayout=\"horizontal\"\n                        dataSource={dataSource}\n                        renderItem={item => (\n                            <ContributorItem item={item} editMode={editMode}/>\n                        )}\n                    />\n                }\n            </div>\n        )\n    }\n};\n\nconst mapRStoProps = (rs) => {\n    return { \n        pendingContributors: rs.contributor.pending,\n        storyContributors: rs.storyDetail.contributor, \n    }\n}\n\nexport default connect(mapRStoProps)(ContributorList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContributorForm from './ContributorForm';\nimport ContributorList from './ContributorList';\n\nimport { Modal, Button, } from 'antd';\n\nclass ContributorPopup extends Component {\n    state = {\n        loading: false,\n        visible: false,\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleCancel = () => {\n        this.props.dispatch({ type: \"RESET_PENDING_CONTRIBUTOR\" })\n        this.setState({ visible: false });\n    }\n\n    handleInvite = () => {\n        const fullPayload = {\n            story_id: this.props.story_id,\n            pendingContributor: this.props.pendingContributor\n        }\n        this.props.dispatch({ type: 'ADD_CONTRIBUTOR', payload: fullPayload});\n        this.setState({ visible: false });\n    }\n\n    render() {\n        const { visible, loading } = this.state;\n        const { editMode } = this.props;\n        const footer = [];\n        //some logic here to only show footer on edit page\n        if (editMode) {\n\n        }\n\n        let ContributorBtnName = 'View Contributors';\n        let title = 'Story Contributors';\n        //some logic to change button name based on edit/view and  \n        // whether there are many contributors, none, or one\n        if (editMode) {\n            ContributorBtnName = 'Add Contributors';\n            title = 'Inviting Contributors to Story'\n            //adds footer actions for editors\n            footer.push(<Button key=\"back\"\n                onClick={this.handleCancel}>\n                Cancel</Button>);\n            footer.push(<Button key=\"submit\"\n                type=\"primary\"\n                loading={loading}\n                onClick={this.handleInvite}\n                icon='usergroup-add'>\n                Send Invites</Button>);\n        }\n\n\n\n        return (\n            <div>\n                <Button onClick={this.showModal}\n                    className='edit-button'   >\n                    {ContributorBtnName}</Button>\n                <Modal\n                    visible={visible}\n                    title={title}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={footer}>\n                    {editMode === true &&\n                        <ContributorForm />\n                    }\n                    <ContributorList editMode={editMode}/>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        pendingContributor: rs.contributor.pending\n    }\n}\n\nexport default connect(mapRStoProps)(ContributorPopup);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// ant design import\nimport { Modal, Input, Button } from 'antd';\n\nclass AddChapter extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            visible: false,\n        }\n\n        this.baseState = this.state;\n    }\n\n    // open the chapter modal\n    openChapterModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    // function for setting local state with user input\n    onInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value,\n        });\n    } // end onInputChange\n\n    // submits the currently entered field and allows the user to create another chapter\n    addChapter = () => {\n        // add 1 to the length of existing chapters to get the new chapter order\n        let newOrder = this.props.chapter.length + 1;\n\n        // create an array to use the existing chapter router POST route\n        let chapterArray = [];\n        chapterArray.push({ title: this.state.title,\n                            text: 'This is a newly made chapter.',\n                            order: newOrder,\n                            chapter_photo: '/images/placeholder.png',\n                            disabled: true,\n                         });\n\n        // package the data to be sent to the server\n        let dataToSend = { chapter: chapterArray,\n                           storyId: this.props.storyId,\n                         };\n        // call reduxSaga for adding a new chapter passing the chapter array and story id\n        this.props.dispatch({ type: 'ADD_EXISTING_STORY_CHAPTER', payload: dataToSend });\n\n        // set state to intial value\n        this.setState(this.baseState);\n    } // end addChapter\n\n    // do not save the entered chapter data and close modal\n    cancelEntry = () => {\n        this.setState({\n            visible: false,\n        })\n    } // end cancelEntry\n\n    render() {\n\n        return (\n            <div>\n                <Button \n                    onClick={this.openChapterModal} \n                    className='edit-button'>\n                    Add Chapter\n                </Button>\n                <Modal title=\"New chapter title\"\n                       visible={this.state.visible}\n                       onOk={this.addChapter}\n                       okText='Add Chapter'\n                       onCancel={this.cancelEntry}\n                       keyboard={true}\n                >\n                    <Input placeholder=\"next chapter\" \n                           name=\"title\"\n                           value={this.state.title}\n                           onChange={this.onInputChange} \n                           allowClear \n                    />\n                </Modal>\n            </div>\n        )\n    }\n};\n\nexport default connect()(AddChapter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\n\nimport AddChapter from './../Chapter/AddChapter.js';\n\nimport { List, Row, Typography, Divider, Col, Avatar } from 'antd';\n\nconst { Title } = Typography;\n\nclass SummaryChapterList extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired,\n        storyId: PropTypes.number.isRequired,\n        chapter: PropTypes.array.isRequired,\n        editMode: PropTypes.bool.isRequired,\n    };\n\n    readChapter = (e) => {\n        this.props.history.push(`/existing-story/${e.story_id}/chapter/${e.id}`)\n    }\n\n    render() {\n        const { chapter, storyId, editMode } = this.props\n        return (\n            <div >\n                {/* this will only show chapters if user is editor so they can see add chapter button */}\n                {(editMode || chapter.length > 0) &&\n                    <div>\n                        <Divider style={{ marginTop: 30, marginBottom: 0 }}>\n                            <Title level={4} style={{ textAlign: 'center' }}>Chapters</Title>\n                        </Divider>\n                        <Row type='flex' align='middle' justify='center'>\n                            {editMode &&\n                                <Col>\n                                    <AddChapter chapter={chapter} storyId={storyId} />\n                                </Col>\n                            }\n                        </Row>\n                    </div>\n                }\n                {chapter.length > 0 ?\n                    <Row type='flex' align='middle' justify='center'>\n                        <Col span={18}>\n                            <List\n                                itemLayout=\"vertical\"\n                                size=\"large\"\n                                pagination={{\n                                    pageSize: 3,\n                                }}\n                                dataSource={this.props.chapter}\n                                renderItem={item => {\n                                    const { chapter_photo, title, text } = item;\n                                    let textToShow = '';\n                                    if (text !== null) {\n                                        textToShow = text.substring(0, 40) + '...';\n                                    }\n                                    let imgToShow = './images/placeholder.png';\n                                    if (chapter_photo !== null) {\n                                        imgToShow = chapter_photo;\n                                    }\n                                    return (\n                                        <List.Item\n                                            key={title}\n                                        >\n                                            <List.Item.Meta\n                                                avatar={<Link to={`${this.props.match.url}/chapter/${this.props.chapter.indexOf(item)}`}><Avatar src={imgToShow} shape=\"square\" size={64} /></Link>}\n                                                title={<Link to={`${this.props.match.url}/chapter/${this.props.chapter.indexOf(item)}`}>{title}</Link>}\n                                                description={<Link to={`${this.props.match.url}/chapter/${this.props.chapter.indexOf(item)}`}>{textToShow}</Link>}\n                                            />\n                                        </List.Item>\n\n                                    )\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    :\n                    null\n                }\n            </div >\n        )\n    }\n};\n\nconst SummaryChapterListWithRouter = withRouter(SummaryChapterList);\n\nexport default connect()(SummaryChapterListWithRouter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ContributorPopup from '../Contributor/ContributorPopup';\nimport SummaryChapterList from './SummaryChapterList';\nimport SubHeader from '../../Common/SubHeader';\nimport EditButton from './EditButton';\nimport FinalizeStoryButton from './FinalizeStoryButton';\nimport ImageUpload from './../../ImageUpload/ImageUpload.js';\n\nimport { Row, Col, Card, Typography, Divider, PageHeader } from 'antd';\n\nconst { Meta } = Card;\nconst { Title, Paragraph } = Typography;\n\nclass ExistingStorySummary extends Component {\n    static propTypes = {\n        summary: PropTypes.array.isRequired,\n        contributor: PropTypes.array.isRequired,\n        chapter: PropTypes.array.isRequired,\n        editMode: PropTypes.bool.isRequired,\n        user: PropTypes.object.isRequired,\n    }\n\n    render() {\n        const { summary, chapter, contributor, editMode } = this.props;\n        const { title, author_name, id, header_photo, caption, intro } = summary[0];\n        const contributorSum = contributor.length;\n        let contributorDescription;\n        if (contributorSum === 0) {\n            contributorDescription = '';\n        } else if (contributorSum === 1) {\n            contributorDescription = ` and ${contributor[0].first_name} ${contributor[0].last_name}`;\n        } else if (contributorSum > 1) {\n            contributorDescription = ` and ${contributorSum} contributors`;\n        }\n\n        // console.log('in existingstory: ', this.props);\n\n        return (\n            <div>\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                    <Col span={24}>\n                        <SubHeader headerText='Story Summary' />\n                    </Col>\n                </Row>\n                {/* this will check that the storyDetail reducer is populated \n                before rendering its contents */}\n                {this.props.summary.length > 0 &&\n                    <div>\n                        <Row type='flex' justify=\"space-around\" align=\"middle\">\n                            <PageHeader\n                                title={title}\n                                subTitle={`By ${author_name}${contributorDescription}`}\n                            />\n                            {editMode &&\n                                <Col span={8} style={{ marginBottom: 20 }}>\n                                    <EditButton\n                                        valueToEdit={title}\n                                        type='Story'\n                                        name='Title'\n                                        id={id} />\n                                </Col>\n                            }\n                            {editMode &&\n                                <Col span={12} style={{ marginBottom: 20 }}>\n                                    <ContributorPopup editMode={editMode} story_id={id} />\n                                </Col>\n                            }\n                        </Row>\n                        <Card\n                            style={{\n                                width: 300, display: 'block', margin: 'auto', marginBottom: 10,\n                            }}\n                            cover={<img alt=\"story book cover\" src={header_photo} />}\n                        >\n                            <Meta\n                                description={caption}\n                            />\n                        </Card>\n\n                        {editMode &&\n                            <Row type='flex' justify='space-around' align=\"middle\">\n                                <Col span={6}>\n                                    <EditButton\n                                        valueToEdit={caption}\n                                        type='Story'\n                                        name='Caption'\n                                        id={id} />\n                                </Col>\n                                <Col span={10}>\n                                    <ImageUpload\n                                        photoDetails={{\n                                            typeOfPhoto: 'EDIT_STORY_IMAGE',\n                                            title: `Changing Story Photo`,\n                                            storyId: id,\n                                            buttonName: \"Change Photo\"\n                                        }}\n                                        editMode={editMode} />\n                                </Col>\n                            </Row>\n                        }\n\n\n                        <Row type='flex' justify='center'>\n                            <Divider>\n                                <Title level={4} style={{ textAlign: 'center', marginTop: 10 }}>Introduction</Title>\n                            </Divider>\n                            {intro !== null ?\n                                <Col span={18}>\n                                    <Paragraph>\n                                        {intro}\n                                    </Paragraph>\n                                </Col>\n                                :\n                                <Col span={18}>\n                                    <Paragraph> This story has no introduction yet! </Paragraph>\n                                </Col>\n\n                            }\n                            {editMode &&\n                                <Col span={18}>\n                                    <EditButton\n                                        valueToEdit={intro}\n                                        type='Story'\n                                        name='Intro'\n                                        id={id} />\n                                </Col>\n                            }\n\n                        </Row>\n                    </div>\n                }\n                {/* chapters div here */}\n                {chapter &&\n                    <SummaryChapterList chapter={chapter} storyId={summary[0].id} editMode={editMode} />\n                }\n                <FinalizeStoryButton />\n            </div>\n        )\n    }\n};\n\nconst mapStoreToProps = reduxStore => ({\n    user: reduxStore.user.userInfo,\n})\n\nexport default connect(mapStoreToProps)(ExistingStorySummary);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nimport ChapterView from './ChapterView/ChapterView';\nimport ExistingStorySummary from './ExistingStorySummary';\n\nclass ExistingStoryMain extends Component {\n\n  state = {\n    editMode: false,\n  }\n\n  static propTypes = {\n    storyDetail: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params\n    this.props.dispatch({\n      type: 'GET_INDIVIDUAL_STORY',\n      payload: id\n    });\n    this.props.dispatch({\n      type: 'GET_STORY_CHAPTER_DETAIL',\n      payload: id\n    });\n    this.props.dispatch({\n      type: 'GET_STORY_CONTRIBUTORS',\n      payload: id\n    });\n  }\n\n  //checks incoming props to determine state value \n  //checks story contributors and author for user id and returns status accordingly\n  static getDerivedStateFromProps(props, state) {\n    const { contributor, summary } = props.storyDetail;\n    const { user } = props;\n    // console.log(props);\n    //editmode always false for completed stories\n    // console.log('in getderived state', summary.completed)\n    // console.log(summary);\n    let authorCheck = false;\n    if (summary.length > 0) {\n      //sets author t/f only after summary loads\n      // console.log('summary has loaded');\n      authorCheck = (summary[0].author_id === user.id);\n      // console.log(authorCheck);\n\n      //if story is completed edit mode always false\n      if (summary[0].completed) {\n        // console.log('story complete');\n        return { editMode: false }\n      }\n    }\n\n    //default edit mode is false\n    //searches contributors for user id\n    const contributorCheck = contributor.filter(\n      contributorObj => contributorObj.id === user.id).length > 0;\n    // console.log(contributorCheck);\n    //checks user id against author id\n\n    if (contributorCheck || authorCheck) {\n      // console.log('user is a contributor or author');\n      return { editMode: true }\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    //took out likes and contributor for now b/c compile warnings\n    const { summary, chapter, contributor } = this.props.storyDetail;\n    const { editMode } = this.state;\n    const { chapterId } = this.props.match.params;\n    // console.log('existing story main state:', this.state)\n    return (\n      <div>\n        {/* checks to make sure all relevant existing story data has loaded */}\n        {summary.length > 0 && isNaN(chapterId) &&\n          <ExistingStorySummary\n            summary={summary}\n            chapter={chapter}\n            editMode={editMode}\n            contributor={contributor} />\n        }\n        {/* if chapter id is on param loads chapter view */}\n        {chapter.length > 0 && isNaN(chapterId) !== true &&\n          <ChapterView\n            summary={summary}\n            chapter={chapter}\n            contributor={contributor}\n            // chapterId is key so component rerenders on params change\n            key={chapterId}\n            editMode={editMode} />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStoreToProps = reduxStore => ({\n  storyDetail: reduxStore.storyDetail,\n  user: reduxStore.user.userInfo,\n})\n\nexport default connect(mapStoreToProps)(ExistingStoryMain);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// ant design import\nimport { Select, Form } from 'antd';\n\nclass ChooseTemplate extends Component {\n\n    // load templates for the dropdown menu\n    componentDidMount() {\n        this.props.dispatch({ type: 'GET_TEMPLATE_STORY' });\n    }\n\n    // gets template details from the database and sets the reducer\n    handleChange = (value) => {\n        if (value === 'initial') {\n            this.props.dispatch({ type: 'SET_TEMPLATE_NEW_CREATE' })\n        } else {\n            this.props.dispatch({ type: 'GET_TEMPLATE_DETAILS', payload: value });\n        }\n    }\n\n    render() {\n        return (\n            <Form.Item\n                label=\"Create a story or choose a template\">\n                <Select\n                    defaultValue=\"Please select\"\n                    style={{ width: '100%' }}\n                    id='storyType'\n                    onChange={this.handleChange}>\n                    <Select.Option value=\"initial\">Create a new Story</Select.Option>\n                    {this.props.template.map((item, i) => (<Select.Option key={i} value={item.id}>{item.name}</Select.Option>))}\n                </Select>\n            </Form.Item >\n        )\n    }\n};\n\nconst mapStoreToProps = reduxStore => ({\n    template: reduxStore.template.templateReducer,\n});\n\nexport default connect(mapStoreToProps)(ChooseTemplate);","import React, { Component } from 'react';\n\nimport './CreateStory.css'\n\n// ant design import\nimport { Steps } from 'antd';\n\nclass CreateStorySteps extends Component {\n\n    render() {\n        return (          \n                <Steps current={Number(this.props.current)} size='small'>\n                    <Steps.Step title=\"New or Template\" />\n                    <Steps.Step title=\"Story Details\" />\n                    <Steps.Step title=\"Chapters\" />\n                    <Steps.Step title=\"Contributors\" />\n                </Steps>\n        )\n    }\n\n}\n\nexport default CreateStorySteps;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ChooseTemplate from './ChooseTemplate.js';\nimport CreateStorySteps from './CreateStorySteps.js';\nimport './CreateStory.css'\n\nimport SubHeader from '../../Common/SubHeader';\n\n// ant design import\nimport { Form, Button, Icon, Row, Col } from 'antd';\n\nclass CreateStoryMain extends Component {\n    // called when create story button is pressed\n    // packages local state and redux reducer data and calls the saga to create database entries\n    nextPage = (event) => {\n        event.preventDefault();\n        this.props.history.push('/choose-template/detail/');\n    } // end createStory\n\n    render() {\n        const { template } = this.props;\n\n        return (\n            <div>\n                <Row type='flex' align='middle' justify='center'>\n                    <Col span={24}>\n                        <SubHeader headerText='Create a Story' />\n                    </Col>\n                    <Col span={18}>\n                        <CreateStorySteps current={0} />\n                    </Col>\n                    <Col span={18}>\n                        <Form layout=\"vertical\" onSubmit={this.nextPage}>\n                            <Row type=\"flex\" justify=\"space-between\">\n                                <Col span={24}>\n                                    <ChooseTemplate />\n                                </Col>\n\n                                <Col span={9}>\n                                    <Button\n                                        className='create-story-nav-btn'>\n                                        Cancel\n                                    </Button>\n                                </Col>\n\n                                <Col span={9}>\n                                    <Button\n                                        className='create-story-nav-btn'\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        disabled={template.name === ''}>\n                                        Next\n                                        <Icon type=\"right\" />\n                                    </Button>\n                                </Col>\n\n                            </Row>\n                        </Form>\n                    </Col>\n\n                </Row>\n\n\n\n\n            </div>\n\n        )\n    }\n\n}\n\nconst mapStoreToProps = reduxStore => ({\n    template: reduxStore.template.templateNewStoryReducer,\n});\n\nexport default connect(mapStoreToProps)(CreateStoryMain);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ImageUpload from './../../ImageUpload/ImageUpload.js';\nimport CreateStorySteps from './../CreateStory/CreateStorySteps.js';\nimport SubHeader from '../../Common/SubHeader';\n\nimport { Form, Input, Button, Avatar, Row, Col, Icon } from 'antd';\nimport './CreateStory.css';\n\nclass CreateStoryDetail extends Component {\n    previousButton = () => {\n        this.props.history.push('/choose-template/');\n    }\n\n    hasErrors = (fieldsError) => {\n        return Object.keys(fieldsError).some(field => fieldsError[field]);\n    }\n\n    // called when create story button is pressed\n    // packages local state and redux reducer data and calls the saga to create database entries\n    createStory = (event) => {\n        event.preventDefault();\n        this.props.form.validateFieldsAndScroll((error, values) => {\n            if (!error) {\n                // variable for story data payload\n                let storyData = '';\n\n                // will create different data to send if the story statred as a template\n                if (this.props.template.title !== 'initial') {\n                    storyData = {\n                        title: values.title,\n                        header_photo: this.props.image.storyImage,\n                        caption: values.caption,\n                        intro: values.intro,\n                        is_template: true,\n                    };\n                } else {\n                    storyData = {\n                        title: values.title,\n                        header_photo: this.props.image.storyImage,\n                        caption: values.caption,\n                        intro: values.intro,\n                        is_template: false,\n                    };\n                }\n\n                // send data to the saga\n                this.props.dispatch({ type: 'SET_NEW_STORY', payload: storyData });\n                this.props.history.push('/choose-template/chapter/');\n\n                // clear the fields\n                this.props.form.resetFields();\n            }\n        });\n    } // end createStory\n\n    render() {\n        const { story, image, template } = this.props;\n        const { getFieldDecorator, getFieldsError } = this.props.form;\n\n        return (\n            <div >\n                <Row type='flex' align='middle' justify='center'>\n                    <Col span={24}>\n                        <SubHeader headerText='Fill Out Story Details' />\n                    </Col>\n                    <Col span={18}>\n                        <CreateStorySteps current={1} />\n                    </Col>\n                    <Col span={18}>\n                        <Form layout=\"vertical\" onSubmit={this.createStory}>\n                            <Row type=\"flex\" justify=\"space-between\" style={{ marginBottom: 20 }}>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Story title\"\n                                    >\n                                        {getFieldDecorator('title', {\n                                            initialValue: story.title !== '' ? story.title : template.title,\n                                            rules: [{ required: true, message: 'Please enter a story title!' }],\n                                        })(<Input \n                                                allowClear \n                                                placeholder=\"Story title\" />)\n                                        }\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Story intro\"\n                                    >\n                                        {getFieldDecorator('intro', {\n                                            initialValue: story.intro !== '' ? story.intro : template.intro,\n                                            rules: [{ required: true, message: 'Please enter an intro!' }],\n                                        },\n                                        )(\n                                            <Input allowClear\n                                                placeholder=\"Enter an introduction\"\n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Upload Story Photo\">\n                                        {getFieldDecorator('header_photo', {\n                                            initialValue: template.placeholder_image !== '' ? template.placeholder_image : image.storyImage,\n                                        },\n                                        )(\n                                            <div>\n                                                <Avatar shape=\"square\"\n                                                    size={150}\n                                                    icon='picture'\n                                                    src={template.placeholder_image !== '' ? template.placeholder_image : image.storyImage}\n                                                    style={{ display: 'block', margin: 'auto', marginBottom: 10 }}\n                                                />\n                                                <ImageUpload photoDetails={{ typeOfPhoto: 'STORY', title: \"Adding Photo for New Story\", buttonName: 'Add Story Photo' }} />\n                                            </div>\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Photo caption\"\n                                    >\n                                        {getFieldDecorator('caption', {\n                                            initialValue: story.caption !== '' ? story.caption : template.caption,\n                                        },\n                                        )(\n                                            <Input allowClear\n                                                placeholder=\"Add a caption for your picture\"\n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={9}>\n                                    <Button onClick={this.previousButton}\n                                        className='create-story-nav-btn'>\n                                        <Icon type=\"left\" />\n                                        Previous\n                                    </Button>\n                                </Col>\n                                <Col span={9}>\n                                    <Button type=\"primary\"\n                                        htmlType=\"submit\"\n                                        className='create-story-nav-btn'\n                                        disabled={this.hasErrors(getFieldsError())}>\n                                        Next\n                                    <Icon type=\"right\" />\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst WrappedCreateStoryDetail = Form.create()(CreateStoryDetail);\n\nconst mapStoreToProps = reduxStore => ({\n    story: reduxStore.story.newStoryReducer,\n    image: reduxStore.story.imageReducer,\n    template: reduxStore.template.templateNewStoryReducer,\n});\n\nexport default connect(mapStoreToProps)(WrappedCreateStoryDetail);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CreateStorySteps from './CreateStorySteps.js'\nimport SubHeader from '../../Common/SubHeader';\n\n// ant design import\nimport { Form, Input, Button, Icon, Row, Col } from 'antd';\n\nlet id = 0;\n\nclass CreateStoryChapter extends Component {\n    removeChapter = (k) => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        // can use data-binding to set\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k),\n        });\n    } // end removeChapter\n\n    addChapter = () => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        // can use data-binding to set\n        // important! notify form to detect changes\n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n    } // end addChapter\n\n    // go back to the previous page\n    previousButton = () => {\n        this.props.history.push('/choose-template/detail/');\n    } // end previousButton\n\n    // called when create story button is pressed\n    // packages local state and redux reducer data and calls the saga to create database entries\n    nextPage = (event) => {\n        event.preventDefault();\n        this.props.form.validateFieldsAndScroll((error, values) => {\n            if (!error) {\n                // check keys value to find out if there are any chapters\n                if (values.keys.length > 0) {\n                    // filter out empty chapters that have been removes\n                    let filterValues = values.title.filter((item) => ({ title: item }));\n                    // package the chapters in an object for the reducer\n                    let newPayload = filterValues.map((ch) => ({\n                        title: ch,\n                        text: '',\n                        chapter_photo: '/images/placeholder.png',\n                    }));\n                    // create a variable for dispatching to redux saga and send\n                    let dataToSend = { type: 'SET_NEW_STORY_CHAPTER', payload: newPayload };\n                    this.props.dispatch(dataToSend);\n                }\n                // go to the contributor page\n                this.props.history.push('/choose-template/contributor/');\n            } else {\n                console.log('Error: ', values);\n            }\n        });\n    } // end createChapter\n\n    render() {\n\n        const { template } = this.props;\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        // create initial values for the 'keys' to show template chapters\n        const tempArray = template.length > 0 ? template.map((item, i) => (i)) : [];\n        // const chapArray = chapter.length > 0 ? chapter.map((item,i) => (i)) : [];\n        // const useArray = chapter.length !== 0 ? chapArray : tempArray;\n\n        // used in the formItems map to display a user prompt if a template\n        const isTemplate = template.length > 0 ? true : false;\n\n        getFieldDecorator('keys', { initialValue: tempArray });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Col span={24} key={index}>\n                <Form.Item\n                    label={`Chapter ${index + 1}`}\n                    extra={isTemplate && (k >= 0 && k <= (template.length - 1)) ? template[k].text : ''}\n                    required={true}\n                >\n                    {getFieldDecorator(`title[${k}]`, {\n                        initialValue: isTemplate && (k >= 0 && k <= (template.length - 1)) ? template[k].title : '',\n                        validateTrigger: ['onChange', 'onBlur'],\n                        rules: [{\n                            required: true,\n                            whitespace: true,\n                            message: \"Please enter a chapter title or delete.\",\n                        }],\n                    })(\n                        <Input style={{ width: '100%' }}\n                            addonAfter={<Icon\n                                className=\"dynamic-delete-button\"\n                                type=\"minus-circle-o\"\n                                disabled={keys.length === 1}\n                                onClick={() => this.removeChapter(k)}\n                            />} />\n                    )}\n\n                </Form.Item>\n            </Col>\n        ));\n\n        return (\n            <div>\n                <Row type='flex' align='middle' justify='center'>\n                    <Col span={24}>\n                        <SubHeader headerText='Add Chapters' />\n                    </Col>\n                    <Col span={18}>\n                        <CreateStorySteps current={2} />\n                    </Col>\n                    <Col span={18}>\n                        <Form layout=\"vertical\" onSubmit={this.nextPage}>\n                            <Row type=\"flex\" justify=\"space-between\" style={{ marginBottom: 20 }}>\n                                {formItems}\n\n                                <Col span={24}>\n                                    <Form.Item >\n                                        <Button type=\"dashed\" onClick={this.addChapter} style={{ width: '100%' }}>\n                                            <Icon type=\"plus\" />\n                                            Add another chapter\n                                        </Button>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={9}>\n                                    <Button onClick={this.previousButton} className='create-story-nav-btn'>\n                                        <Icon type=\"left\" />\n                                        Previous\n                                    </Button>\n                                </Col>\n                                <Col span={9}>\n                                    <Button type=\"primary\" htmlType=\"submit\" className='create-story-nav-btn'>\n                                        Next\n                                        <Icon type=\"right\" />\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nconst WrappedCreateStoryChapter = Form.create()(CreateStoryChapter);\n\nconst mapStoreToProps = reduxStore => ({\n    template: reduxStore.template.templateNewChapterReducer,\n});\n\nexport default connect(mapStoreToProps)(WrappedCreateStoryChapter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContributorForm from '../Contributor/ContributorForm.js';\nimport ContributorList from '../Contributor/ContributorList.js';\nimport CreateStorySteps from './../CreateStory/CreateStorySteps.js';\nimport SubHeader from '../../Common/SubHeader';\n\n// ant design import\nimport { Form, Button, Row, Col, Typography, Icon } from 'antd';\n\nclass CreateStoryContributor extends Component {\n    // go back to the previous page\n    previousButton = () => {\n        this.props.history.push('/choose-template/chapter/');\n    }\n\n    // called when create story button is pressed\n    // packages local state and redux reducer data and calls the saga to create database entries\n    createStory = (event) => {\n        event.preventDefault();\n        this.props.form.validateFieldsAndScroll((error, values) => {\n            if (!error) {\n                // package story, chapter, and contributor reducers and send to saga\n                // seperate files for story, chapter and contributor data sent to the redux saga\n                let storyDataToSend = this.props.story;\n                let chapterDataToSend = this.props.chapter;\n                let contributorDataToSend = this.props.contributor;\n\n                // bundle the story, chapter and contributon files together and create a payload\n                let completeDataToSend = { story: storyDataToSend, chapter: chapterDataToSend, contributor: contributorDataToSend };\n\n                // send data to the saga\n                this.props.dispatch({ type: 'POST_NEW_STORY', payload: completeDataToSend });\n                // clear the fields\n                this.props.form.resetFields();\n                // go to home page\n                this.props.history.push('/home');\n            }\n        });\n    } // end createStory\n\n    render() {\n        const { contributor } = this.props;\n\n        return (\n            <div>\n                <Row type='flex' align='middle' justify='center'>\n                    <Col span={24}>\n                        <SubHeader headerText='Add Contributors' />\n                    </Col>\n                    <Col span={18}>\n                        <CreateStorySteps current={3} />\n                    </Col>\n                    <Col span={18}>\n                        <Form layout=\"vertical\" onSubmit={this.createStory}>\n                            <Row type=\"flex\" justify=\"space-between\" style={{ marginBottom: 20 }}>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Add contributors\">\n                                        <ContributorForm />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24} style={{marginBottom: 20}}>\n                                    {contributor.length !== 0 ?\n                                        <ContributorList editMode='true'/> \n                                        :\n                                        <Typography align=\"center\">\n                                            Contributors will show up here as you add them.\n                                        </Typography>\n                                    }\n                                </Col>\n                                <Col span={9}>\n                                    <Button onClick={this.previousButton}\n                                        className='create-story-nav-btn'>\n                                        <Icon type=\"left\" />\n                                        Previous\n                                    </Button>\n                                </Col>\n                                <Col span={9}>\n                                    <Button type=\"primary\"\n                                        htmlType=\"submit\"\n                                        className='create-story-nav-btn'>\n                                        Create Story\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nconst WrappedCreateStoryContributor = Form.create()(CreateStoryContributor);\n\nconst mapStoreToProps = reduxStore => ({\n    story: reduxStore.story.newStoryReducer,\n    chapter: reduxStore.chapter.newStoryChapterReducer,\n    contributor: reduxStore.contributor.pending,\n});\n\nexport default connect(mapStoreToProps)(WrappedCreateStoryContributor);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { Typography, Icon, Badge } from 'antd';\n\nconst { Text } = Typography;\n\nclass NavigationLink extends Component {\n    render() {\n        // console.log('in navigation link render', this.props);\n        const { route, name, iconType } = this.props.routeObj;\n        let onClickFxn = this.props.handleSideBar.bind(this, false);\n        if (name === 'Log Out') {\n            onClickFxn = () => this.props.dispatch({ type: 'LOGOUT' })\n        }\n        const textStyle = { color: 'inherit', fontSize: '16px' };\n\n        return (\n            <NavLink exact to={route} onClick={onClickFxn} activeClassName='nav-link-active' className='nav-link-default'>\n                <div className='nav-link-div'>\n                    {name === 'Notifications' ?\n                        (<Badge count={this.props.notificationCount}><Text style={textStyle}><Icon type={iconType} style={textStyle} /> &nbsp; {name}</Text></Badge>)\n                        : (<Text style={textStyle}><Icon type={iconType} style={textStyle} /> &nbsp; {name}</Text>)}\n                </div>\n            </NavLink>\n        )\n    }\n}\n\n// {this.props.story ?\n//     (<ContributedStoryList history={this.props.history} />) : (<p>loading...</p>)}\n\nconst mapStateToProps = reduxStore => ({\n    invite: reduxStore.notification.invite,\n});\n\nexport default connect(mapStateToProps)(NavigationLink);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport NavigationLink from './NavigationLink';\n\nimport { Drawer, Typography, Divider } from 'antd';\nimport './Nav.css';\nimport 'antd/dist/antd.css';\n\n// this drawer contains the main nav\n// SideDrawer component is sourced in the Nav.js component\n\nconst { Title } = Typography;\n\nclass SideDrawer extends Component {\n    //creates navLinks\n    buildLinks = () => {\n        const routes = [\n            { route: '/home', name: 'Home', iconType: 'home' },\n            { route: '/notification', name: 'Notifications', iconType: 'bell' },\n            { route: '/choose-template', name: 'Begin Story', iconType: 'plus-square' },\n            { route: '/search', name: 'Browse Stories', iconType: 'search' },\n            { route: '/about', name: 'About', iconType: 'info-circle' },\n            { route: '/', name: 'Log Out', iconType: 'logout' }];\n        return routes.map((routeObj, i) => {\n            return <NavigationLink routeObj={routeObj} notificationCount={this.props.invite.length} handleSideBar={this.props.handleSideBar} key={i} />\n        })\n    }\n\n    render() {\n        const { userInfo, visible, handleSideBar } = this.props;\n        const logo = './images/kevinslogos/JourneyTellr-Logo_icononly_Color-version.png';\n        //determines if placeholder pic needs to be used\n        let profilePic = './images/placeholder.png';\n        if (userInfo.profile_pic !== null) {\n            profilePic = userInfo.profile_pic;\n        }\n        // console.log('in side drawer render');\n        return (\n            <Drawer\n                width={300}\n                placement=\"left\"\n                closable={true}\n                onClose={handleSideBar.bind(this, false)}\n                visible={visible}\n            >\n                <img src={logo} alt={'logo'} height=\"40\" width=\"40\" className=\"logo-icon-only\" />\n                <Divider />\n                <Link to=\"/profile\" onClick={handleSideBar.bind(this, false)} >\n                    {/* Title contains current users profile picture and name */}\n                    {/* When clicked on, the user will be taken to the Profile page */}\n                    <Title level={4}>\n                        <img src={profilePic} height=\"60\" alt='placeholder' />\n                        &nbsp;&nbsp;\n                            {userInfo.first_name}&nbsp;{userInfo.last_name}\n                    </Title>\n                </Link>\n                <Divider />\n                {this.buildLinks()}\n            </Drawer>\n        );\n    }\n};\n\n\nconst mapStateToProps = store => ({\n    userInfo: store.user.userInfo,\n    invite: store.notification.invite,\n});\n\nexport default connect(mapStateToProps)(SideDrawer);\n\n","import React, { Component } from 'react';\nimport SideDrawer from './SideDrawer';\n\n// icons used on this component\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\nimport './Nav.css';\n\n//adds special icon library\nlibrary.add(faBars);\n\nclass NavButton extends Component {\n    state = {\n        visible: false,\n    };\n\n    // this causes the nav drawer to appear when called\n    handleSideBar = (bool, e) => {\n        this.setState({\n            visible: bool,\n        });\n    };\n\n    render() {\n        // console.log(this.state);\n        return (\n            <div className='header-button-div'>\n                <FontAwesomeIcon\n                    className=\"drawer-btn\"\n                    icon=\"bars\"\n                    size=\"2x\"\n                    onClick={this.handleSideBar.bind(this, true)}\n                    visible={toString(this.state.visible)}\n                />\n                {this.state.visible &&\n                    <SideDrawer handleSideBar={this.handleSideBar} visible={this.state.visible} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default NavButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport SubHeader from '../Common/SubHeader';\n\nimport { Input, Icon, Row, Col, Button, notification } from 'antd';\nimport './LoginPage.css';\n\nclass LoginPage extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n    if (this.state.email && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          email: this.state.email,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    });\n  }\n\n  emitEmpty = () => {\n    this.userNameInput.focus();\n    this.setState({ email: '' });\n  }\n\n  showLoginErrorMessage = () => {\n    notification.open({\n      key: 'loginMessage',\n      message: 'An Error Occurred When Logging In',\n      description: this.props.errors.loginMessage,\n      duration: 4,\n    });\n    this.props.dispatch({ type: 'CLEAR_LOGIN_ERROR' });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    const { handleInputChangeFor } = this;\n    const suffix = email ? <Icon type=\"close-circle\" onClick={this.emitEmpty} /> : null;\n\n    return (\n      <div>\n        {this.props.errors.loginMessage &&\n          this.showLoginErrorMessage()\n        }\n        <Row type='flex' align='middle' justify='center'>\n          <Col span={24}>\n            <SubHeader headerText='Log In' />\n          </Col>\n\n          <Col span={20}>\n            <form onSubmit={this.login} className=\"login-form\">\n              <Row type=\"flex\" justify=\"center\">\n                <Col span={18} style={{ margin: '10px 0px' }}>\n                  <label htmlFor=\"email\">\n                    Email:\n                    <Input\n                      placeholder=\"Enter your email address\"\n                      prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      suffix={suffix}\n                      value={email}\n                      id='email'\n                      onChange={handleInputChangeFor} />\n                  </label>\n                </Col>\n                <Col span={18} style={{ marginBottom: '10px' }}>\n                  <label htmlFor=\"password\">\n                    Password:\n                    <Input\n                      placeholder='Enter your password'\n                      prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"password\"\n                      value={password}\n                      id='password'\n                      onChange={handleInputChangeFor} />\n                  </label>\n                </Col>\n                <Col span={18} style={{ marginBottom: '10px' }}>\n                  <Button\n                    type=\"primary\"\n                    htmlType='submit'\n                    style={{ width: '100%' }}>\n                    Log In</Button>\n                </Col>\n              </Row>\n            </form>\n          </Col>\n        </Row>\n        \n        <Row>\n          <Col style={{\n            margin: '20px',\n            float: 'right',}}>\n            <Button\n              onClick={() => { this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' }) }}>\n              Register</Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ImageUpload from '../ImageUpload/ImageUpload';\n\nimport { Button, Icon, Row, Col, Input } from 'antd';\nimport './RegisterPage.css';\n\nclass ProfileInfo extends Component {\n  static propTypes = {\n    registration: PropTypes.object.isRequired,\n    handleInputChangeFor: PropTypes.func.isRequired,\n    handleRegisterNavButton: PropTypes.func.isRequired,\n  }\n\n  advanceRegistration = (e) => {\n    e.preventDefault();\n    this.props.handleRegisterNavButton('user');\n  }\n\n  dummy = () => {\n    let dummyProfile = { type: 'UPDATE_REGISTRATION', payload: {  first_name: 'Matt', last_name: 'Kleven',}}\n    this.props.dispatch(dummyProfile);\n  }\n\n  render() {\n    const { registration, handleInputChangeFor } = this.props;\n\n    return (\n      <form onSubmit={this.advanceRegistration}>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={18} style={{ margin: '10px 0px' }}>\n            <h3>Please enter your public profile info.</h3>\n          </Col>\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"first_name\">\n              First Name:\n              <Input\n                placeholder='Enter your first name'\n                type=\"text\"\n                name=\"first_name\"\n                value={registration.first_name}\n                onChange={handleInputChangeFor}\n                required />\n            </label>\n          </Col>\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"last_name\">\n              Last Name:\n              <Input\n                placeholder='Enter your last name'\n                type=\"text\"\n                name=\"last_name\"\n                value={registration.last_name}\n                onChange={handleInputChangeFor}\n                required />\n            </label>\n          </Col>\n\n          <Col span={18} style={{ marginBottom: '10px' }} >\n            <ImageUpload photoDetails={{ typeOfPhoto: 'REGISTER', title: 'Choosing New Profile Photo', buttonName: 'Add Profile Photo' }} />\n          </Col>\n\n\n          <Col span={12}>\n          <Button\n              className='registration-button'\n              onClick={this.dummy}\n              style={{opacity: 0,}}>\n              Dummy\n              <Icon type=\"right\" />\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Button\n              type='primary'\n              htmlType='submit'\n              className='registration-button'>\n              Next\n              <Icon type=\"right\" />\n            </Button>\n          </Col>\n        </Row>\n\n\n      </form>\n    )\n  }\n}\n\nexport default connect()(ProfileInfo);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Button, Icon, Input, Row, Col } from 'antd';\nimport './RegisterPage.css';\n\nclass UserInfo extends Component {\n  static propTypes = {\n    registration: PropTypes.object.isRequired,\n    handleInputChangeFor: PropTypes.func.isRequired,\n    handleRegisterNavButton: PropTypes.func.isRequired,\n  }\n\n  registerUser = (event) => {\n    event.preventDefault();\n    const { first_name, last_name, email, password,\n      profile_pic, confirm_email, confirm_password } = this.props.registration;\n\n    if (first_name && last_name && (email === confirm_email) && (password === confirm_password)) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          first_name: first_name,\n          last_name: last_name,\n          email: email,\n          password: password,\n          profile_pic: profile_pic\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n    }\n  } // end registerUser\n\n  dummy = () => {\n    let dummyProfile = { type: 'UPDATE_REGISTRATION', payload: {  email: 'mattkleven@gmail.com',\n                                                                  confirm_email: 'mattkleven@gmail.com',\n                                                                  password: 'a',\n                                                                  confirm_password: 'a',\n                                                                  profile_pic: 'https://journey-tellr-images.s3.amazonaws.com/bucketFolder/1553549316156-lg.jpg', }}\n    this.props.dispatch(dummyProfile);\n  }\n\n  render() {\n    const { registration,\n      handleInputChangeFor,\n      handleRegisterNavButton, } = this.props;\n\n    return (\n      <form onSubmit={this.registerUser}>\n        <Row type=\"flex\" justify=\"space-around\" >\n          <Col span={18} style={{ margin: '10px 0px' }}>\n            <h3>Please enter your log in information.</h3>\n          </Col>\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"email\">\n              <Input\n                placeholder=\"yourname@email.com\"\n                onChange={handleInputChangeFor}\n                name='email'\n                value={registration.email}\n                required />\n            </label>\n          </Col>\n\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"confirm_email\">\n              Confirm Email:\n            <Input\n                placeholder=\"yourname@email.com\"\n                type=\"email\"\n                name=\"confirm_email\"\n                value={registration.confirm_email}\n                onChange={handleInputChangeFor}\n                required />\n            </label>\n          </Col>\n\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"password\">\n              Password:\n              <Input\n                placeholder=\"Enter your password\"\n                type=\"password\"\n                name=\"password\"\n                value={registration.password}\n                onChange={handleInputChangeFor}\n                required />\n            </label>\n          </Col>\n\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"confirm_password\">\n              Confirm Password:\n              <Input\n                placeholder=\"Re-enter your password\"\n                type=\"password\"\n                name=\"confirm_password\"\n                value={registration.confirm_password}\n                onChange={handleInputChangeFor}\n                required\n              />\n            </label>\n          </Col>\n\n          <Col span={8}>\n            <Button\n              onClick={handleRegisterNavButton.bind(this, 'profile')}\n              className='registration-button'>\n              <Icon type='left' />\n              Back\n            </Button>\n          </Col>\n          <Col span={2}>\n          <Button\n              onClick={this.dummy}\n              style={{opacity: 0,}}>\n              Dummy\n            </Button>\n          </Col>\n          <Col span={8}>\n            <Button onClick={this.registerUser}\n              type=\"primary\"\n              htmlType='submit'\n              className='registration-button'>\n              Register </Button>\n          </Col>\n        </Row>\n\n\n      </form>\n\n    )\n  }\n}\n\nexport default connect()(UserInfo);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import { Button, Icon } from 'antd';\n\nimport ProfileInfo from './ProfileInfo';\nimport UserInfo from './UserInfo';\nimport SubHeader from '../Common/SubHeader';\n\nimport { notification, Row, Col, Button } from 'antd';\n\nclass RegisterPage extends Component {\n  state = {\n    page: 'profile',\n  }\n\n  handleInputChangeFor = (event) => {\n    this.props.dispatch({\n      type: 'UPDATE_REGISTRATION',\n      payload: {\n        [event.target.name]: event.target.value,\n      }\n    });\n  }\n\n  handleRegisterNavButton = (page, e) => {\n    this.setState({ page: page })\n  }\n\n  showRegisterErrorMessage = () => {\n    notification.open({\n      key: 'registerMessage',\n      message: 'Error with Registration',\n      description: this.props.errors.registrationMessage,\n      duration: 4,\n    });\n    this.props.dispatch({ type: 'CLEAR_REGISTRATION_ERROR' });\n  }\n\n  render() {\n    const { registration } = this.props;\n\n    return (\n      <div>\n        {this.props.errors.registrationMessage &&\n          this.showRegisterErrorMessage()\n        }\n        <Row>\n          <Col>\n            <SubHeader headerText='New User Registration' />\n          </Col>\n\n          {this.state.page === 'profile' &&\n            <Col>\n              <ProfileInfo registration={registration}\n                handleInputChangeFor={this.handleInputChangeFor}\n                handleRegisterNavButton={this.handleRegisterNavButton} />\n            </Col>\n          }\n\n          {this.state.page === 'user' &&\n            <Col>\n              <UserInfo registration={registration}\n                handleInputChangeFor={this.handleInputChangeFor}\n                handleRegisterNavButton={this.handleRegisterNavButton} />\n            </Col>\n          }\n          <Col style={{\n            margin: '20px',\n            float: 'left',\n          }}>\n            <Button\n              onClick={() => { this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' }) }}>\n              Return to Login\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  registration: state.user.registration,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.userInfo,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\n// import ImageUpload from '../ImageUpload/ImageUpload';\nconst axios = require('axios');\n\nclass ProfilePage extends Component {\n\n    //posts to fakes.router.js\n    addFakePeople = (event) => {\n        axios.post('/fakes');\n    }\n\n    //posts to fakes.router.js\n    addFakeStories = (event) => {\n        axios.post('/fakes/story');\n    }\n\n    //this will post to fakes.router.js\n    //and add 50 fake chapters to chapter table\n    addFakeChapters = (event) => {\n        axios.post('fakes/chapter');\n    }\n\n    addFakeLikes = (event) => {\n        axios.post('fakes/likes');\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                    <button onClick={this.addFakePeople}>Add 300 people to the database</button><br />\n                    <button onClick={this.addFakeStories}>Add 30 stories to the database</button><br />\n                    <button onClick={this.addFakeChapters}>Add 50 chapters to the database</button><br />\n                    <button onClick={this.addFakeLikes}>Add 25 likes to random stories</button>\n                    {/* <ImageUpload /> */}\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default ProfilePage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  Link,\n} from 'react-router-dom';\n\n//app routes\nimport AboutPage from '../AboutPage/AboutPage';\nimport HomePage from '../Home/HomePage';\nimport Notification from '../Notification/Notification';\nimport ProfilePage from '../Profile/ProfilePage';\nimport SearchMain from '../Search/SearchMain';\nimport ExistingStoryMain from '../Story/ExistingStory/ExistingStoryMain';\nimport CreateStoryMain from '../Story/CreateStory/CreateStoryMain.js';\nimport CreateStoryDetail from './../Story/CreateStory/CreateStoryDetail.js';\nimport CreateStoryChapter from './../Story/CreateStory/CreateStoryChapter.js';\nimport CreateStoryContributor from './../Story/CreateStory/CreateStoryContributor.js';\nimport NavButton from '../Nav/NavButton';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\n//for dev convenience\nimport FakeData from '../Faker/FakeData';\nimport ContributorPopup from '../Story/Contributor/ContributorPopup';\n\n//styling imports\nimport { Icon, Row, Col, BackTop } from \"antd\";\nimport './App.css';\nimport '../Nav/Nav.css';\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' })\n  }\n\n  render() {\n    // console.log('in ap render');\n    let journeyTellrLogo = './images/kevinslogos/JourneyTellr-Nameonly-color-noR.png'\n    return (\n      <Router>\n        <div>\n          {/* do NOT refactor out: this is the header, it is sourced in this file due to issues arising with navgationlink conditional rendering causing header to rerender */}\n          <Row type=\"flex\" justify=\"center\" align='middle' className='nav'>\n            <Col span={3}>\n              {this.props.user.id !== undefined ?\n                <NavButton />\n                :\n                <div className='header-button-div'>\n                  <Link to=\"/about\" >\n                    <Icon type='info-circle' theme='twoTone' twoToneColor='#D98A4F' style={{ fontSize: '24px' }} />\n                  </Link>\n                </div>\n              }\n            </Col>\n            <Col span={18}>\n              <Link to=\"/home\">\n                <img src={journeyTellrLogo}\n                  alt={'logo'}\n                  className=\"logo\" />\n              </Link>\n            </Col>\n            <Col span={3} />\n          </Row>\n          {/* end header */}\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n            <Route\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            />\n            <ProtectedRoute\n              exact path='/notification'\n              component={Notification}\n            />\n            <ProtectedRoute\n              exact path='/choose-template'\n              component={CreateStoryMain}\n            />\n            <ProtectedRoute\n              exact path='/profile'\n              component={ProfilePage}\n            />\n            <ProtectedRoute\n              exact path='/search'\n              component={SearchMain}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/home\"\n              component={HomePage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/contributor\"\n              component={ContributorPopup}\n            />\n            <ProtectedRoute\n              exact path='/existing-story/:id'\n              component={ExistingStoryMain}\n            />\n            <ProtectedRoute\n              exact path='/existing-story/:id/chapter/:chapterId'\n              component={ExistingStoryMain}\n            />\n            <Route\n              exact path='/fake-data'\n              component={FakeData}\n            />\n            <ProtectedRoute\n              exact path='/choose-template/detail/'\n              component={CreateStoryDetail}\n            />\n            <ProtectedRoute\n              exact path='/choose-template/chapter/'\n              component={CreateStoryChapter}\n            />\n            <ProtectedRoute\n              exact path='/choose-template/contributor/'\n              component={CreateStoryContributor}\n            />\n\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n            {/*  */}\n          </Switch>\n          <BackTop />\n        </div>\n      </Router>\n    )\n  }\n}\n\nconst mapRStoProps = (rs) => {\n  return { user: rs.user.userInfo }\n}\n\nexport default connect(mapRStoProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}